"use strict";(()=>{var e={};e.id=829,e.ids=[829],e.modules={2104:e=>{e.exports=require("@next-auth/prisma-adapter")},3524:e=>{e.exports=require("@prisma/client")},8982:e=>{e.exports=require("cookies-next")},1831:e=>{e.exports=require("lodash/merge")},3227:e=>{e.exports=require("next-auth")},7449:e=>{e.exports=require("next-auth/providers/credentials")},9783:e=>{e.exports=require("next-auth/providers/discord")},7459:e=>{e.exports=require("next-auth/providers/github")},3598:e=>{e.exports=require("next-auth/providers/google")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},72:e=>{e.exports=require("superjson")},2937:e=>{e.exports=import("@trpc/server")},6282:e=>{e.exports=import("@trpc/server/adapters/next")},2079:e=>{e.exports=import("openai")},6555:e=>{e.exports=import("uuid")},9926:e=>{e.exports=import("zod")},6816:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{config:()=>c,default:()=>u,routeModule:()=>d});var n=r(1802),s=r(7153),i=r(6249),o=r(4147),l=e([o]);o=(l.then?(await l)():l)[0];let u=(0,i.l)(o,"default"),c=(0,i.l)(o,"config"),d=new n.PagesAPIRouteModule({definition:{kind:s.x.PAGES_API,page:"/api/trpc/[trpc]",pathname:"/api/trpc/[trpc]",bundlePath:"",filename:""},userland:o});a()}catch(e){a(e)}})},4147:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.r(t),r.d(t,{default:()=>u});var n=r(6282),s=r(3112),i=r(2663),o=r(2285),l=e([n,s,i,o]);[n,s,i,o]=l.then?(await l)():l;let u=(0,n.createNextApiHandler)({router:i.q,createContext:o.uw,onError:"development"===s.O.NODE_ENV?({path:e,error:t})=>{console.error(`‚ùå tRPC failed on ${e??"<no-path>"}: ${t.message}`)}:void 0});a()}catch(e){a(e)}})},2663:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{q:()=>o});var n=r(8308),s=r(2285),i=e([n,s]);[n,s]=i.then?(await i)():i;let o=(0,s.hA)({agent:n.h});a()}catch(e){a(e)}})},8308:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{h:()=>m});var n=r(2079),s=r(9926),i=r(3112),o=r(2852),l=r(4078),u=r(6270),c=r(2285),d=e([n,s,i,o,l,u,c]);[n,s,i,o,l,u,c]=d.then?(await d)():d;let p=s.z.object({goal:s.z.string()}),g=s.z.object({id:s.z.string(),tasks:s.z.array(o.Fh)});async function generateAgentName(e){if(i.O.OPENAI_API_KEY)try{let t=new n.default({apiKey:i.O.OPENAI_API_KEY}),r=await t.chat.completions.create({messages:[{role:"user",content:e},{role:"system",content:`Summarize this into one or two words followed by "GPT" and a single emoji.
           Examples:
           - 'I want to buy a house' becomes HouseGPT üè†
           - 'Analyze top stock prices and generate a report' becomes AnalyzeStockGPT üìà
           `}],model:"gpt-3.5-turbo"});return r.choices[0].message.content}catch(e){console.error(e);return}}let m=(0,c.hA)({create:c.U5.input(p).mutation(async({input:e,ctx:t})=>{let r=await generateAgentName(e.goal)||e.goal;return t.prisma.agent.create({data:{name:r.trim(),goal:e.goal,userId:t.session?.user?.id}})}),save:c.U5.input(g).mutation(async({input:e,ctx:t})=>{let r=await u._.agent.findFirst({where:{id:e.id,userId:t.session?.user?.id}});if(!r)throw Error("Agent not found");let a=e.tasks.map((e,t)=>u._.agentTask.create({data:{agentId:r.id,type:e.type,...e.type===l.zF&&{status:e.status},info:e.info,value:e.value,sort:0}}));return await Promise.all(a),r}),getAll:c.U5.query(async({ctx:e})=>u._.agent.findMany({where:{userId:e.session?.user?.id,deleteDate:null},orderBy:{createDate:"desc"},take:20})),findById:c.$y.input(s.z.string()).query(async({input:e,ctx:t})=>u._.agent.findFirstOrThrow({where:{id:e,deleteDate:null},include:{tasks:{orderBy:{createDate:"asc"}}}})),deleteById:c.U5.input(s.z.string()).mutation(async({input:e,ctx:t})=>{await u._.agent.updateMany({where:{id:e,userId:t.session?.user?.id},data:{deleteDate:new Date}})})});a()}catch(e){a(e)}})},2285:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{$y:()=>p,U5:()=>m,hA:()=>d,uw:()=>createTRPCContext});var n=r(2937),s=r(72),i=r.n(s),o=r(3991),l=r(6270),u=e([n,o,l]);[n,o,l]=u.then?(await u)():u;let createInnerTRPCContext=e=>({session:e.session,prisma:l._}),createTRPCContext=async e=>{let{req:t,res:r}=e,a=await (0,o.W)({req:t,res:r});return createInnerTRPCContext({session:a})},c=n.initTRPC.context().create({transformer:i(),errorFormatter:({shape:e})=>e}),d=c.router,p=c.procedure,g=c.middleware(({ctx:e,next:t})=>{if(!e.session||!e.session.user)throw new n.TRPCError({code:"UNAUTHORIZED"});return t({ctx:{session:{...e.session,user:e.session.user}}})}),m=c.procedure.use(g);a()}catch(e){a(e)}})},2852:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{Fh:()=>g});var n=r(9926),s=r(4078),i=e([n,s]);[n,s]=i.then?(await i)():i;let[o,l,u,c]=["goal","action","system","error"],d=n.z.object({id:n.z.string().optional(),value:n.z.string(),info:n.z.string().optional().nullable()}),p=n.z.object({type:n.z.union([n.z.literal(o),n.z.literal(l),n.z.literal(u),n.z.literal(c)])}).merge(d),g=n.z.union([s.Rp,p]);a()}catch(e){a(e)}})},4078:(e,t,r)=>{r.a(e,async(e,a)=>{try{r.d(t,{Rp:()=>g,zF:()=>i});var n=r(9926),s=e([n]);n=(s.then?(await s)():s)[0];let i="task",o=n.z.object({id:n.z.string().optional(),value:n.z.string(),info:n.z.string().optional().nullable()}),[l,u,c,d]=["started","executing","completed","final"],p=n.z.union([n.z.literal(l),n.z.literal(u),n.z.literal(c),n.z.literal(d),n.z.literal("")]),g=n.z.object({taskId:n.z.string().optional(),type:n.z.literal(i),status:p,result:n.z.string().optional()}).merge(o);a()}catch(e){a(e)}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[222,991],()=>__webpack_exec__(6816));module.exports=r})();