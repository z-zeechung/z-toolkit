{"version":3,"file":"app/api/[provider]/[...path]/route.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/utils/cloudflare.ts","webpack://_N_E/./app/api/common.ts","webpack://_N_E/./app/api/openai.ts","webpack://_N_E/./app/api/azure.ts","webpack://_N_E/./app/api/google.ts","webpack://_N_E/./app/api/anthropic.ts","webpack://_N_E/./app/utils/baidu.ts","webpack://_N_E/./app/api/baidu.ts","webpack://_N_E/./app/api/bytedance.ts","webpack://_N_E/./app/api/alibaba.ts","webpack://_N_E/./app/api/moonshot.ts","webpack://_N_E/./app/api/stability.ts","webpack://_N_E/./app/api/iflytek.ts","webpack://_N_E/./app/api/deepseek.ts","webpack://_N_E/./app/api/siliconflow.ts","webpack://_N_E/./app/api/xai.ts","webpack://_N_E/./app/api/glm.ts","webpack://_N_E/./app/api/proxy.ts","webpack://_N_E/./app/api/[provider]/[...path]/route.ts","webpack://_N_E/./app/api/[provider]/[...path]/route.ts?53dc","webpack://_N_E/?1899","webpack://_N_E/./app/api/auth.ts","webpack://_N_E/./app/utils/format.ts","webpack://_N_E/<anon>"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","export function cloudflareAIGatewayUrl(fetchUrl: string) {\r\n  // rebuild fetchUrl, if using cloudflare ai gateway\r\n  // document: https://developers.cloudflare.com/ai-gateway/providers/openai/\r\n\r\n  const paths = fetchUrl.split(\"/\");\r\n  if (\"gateway.ai.cloudflare.com\" == paths[2]) {\r\n    // is cloudflare.com ai gateway\r\n    // https://gateway.ai.cloudflare.com/v1/{account_id}/{gateway_id}/azure-openai/{resource_name}/{deployment_name}/chat/completions?api-version=2023-05-15'\r\n    if (\"azure-openai\" == paths[6]) {\r\n      // is azure gateway\r\n      return paths.slice(0, 8).concat(paths.slice(-3)).join(\"/\"); // rebuild ai gateway azure_url\r\n    }\r\n    // https://gateway.ai.cloudflare.com/v1/{account_id}/{gateway_id}/openai/chat/completions\r\n    if (\"openai\" == paths[6]) {\r\n      // is openai gateway\r\n      return paths.slice(0, 7).concat(paths.slice(-2)).join(\"/\"); // rebuild ai gateway openai_url\r\n    }\r\n    // https://gateway.ai.cloudflare.com/v1/{account_id}/{gateway_id}/anthropic/v1/messages \\\r\n    if (\"anthropic\" == paths[6]) {\r\n      // is anthropic gateway\r\n      return paths.slice(0, 7).concat(paths.slice(-2)).join(\"/\"); // rebuild ai gateway anthropic_url\r\n    }\r\n    // TODO: Amazon Bedrock, Groq, HuggingFace...\r\n  }\r\n  return fetchUrl;\r\n}\r\n","import { NextRequest, NextResponse } from \"next/server\";\r\nimport { getServerSideConfig } from \"../config/server\";\r\nimport { OPENAI_BASE_URL, ServiceProvider } from \"../constant\";\r\nimport { cloudflareAIGatewayUrl } from \"../utils/cloudflare\";\r\nimport { getModelProvider, isModelNotavailableInServer } from \"../utils/model\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function requestOpenai(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  const isAzure = req.nextUrl.pathname.includes(\"azure/deployments\");\r\n\r\n  var authValue,\r\n    authHeaderName = \"\";\r\n  if (isAzure) {\r\n    authValue =\r\n      req.headers\r\n        .get(\"Authorization\")\r\n        ?.trim()\r\n        .replaceAll(\"Bearer \", \"\")\r\n        .trim() ?? \"\";\r\n\r\n    authHeaderName = \"api-key\";\r\n  } else {\r\n    authValue = req.headers.get(\"Authorization\") ?? \"\";\r\n    authHeaderName = \"Authorization\";\r\n  }\r\n\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(\"/api/openai/\", \"\");\r\n\r\n  let baseUrl =\r\n    (isAzure ? serverConfig.azureUrl : serverConfig.baseUrl) || OPENAI_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  if (isAzure) {\r\n    const azureApiVersion =\r\n      req?.nextUrl?.searchParams?.get(\"api-version\") ||\r\n      serverConfig.azureApiVersion;\r\n    baseUrl = baseUrl.split(\"/deployments\").shift() as string;\r\n    path = `${req.nextUrl.pathname.replaceAll(\r\n      \"/api/azure/\",\r\n      \"\",\r\n    )}?api-version=${azureApiVersion}`;\r\n\r\n    // Forward compatibility:\r\n    // if display_name(deployment_name) not set, and '{deploy-id}' in AZURE_URL\r\n    // then using default '{deploy-id}'\r\n    if (serverConfig.customModels && serverConfig.azureUrl) {\r\n      const modelName = path.split(\"/\")[1];\r\n      let realDeployName = \"\";\r\n      serverConfig.customModels\r\n        .split(\",\")\r\n        .filter((v) => !!v && !v.startsWith(\"-\") && v.includes(modelName))\r\n        .forEach((m) => {\r\n          const [fullName, displayName] = m.split(\"=\");\r\n          const [_, providerName] = getModelProvider(fullName);\r\n          if (providerName === \"azure\" && !displayName) {\r\n            const [_, deployId] = (serverConfig?.azureUrl ?? \"\").split(\r\n              \"deployments/\",\r\n            );\r\n            if (deployId) {\r\n              realDeployName = deployId;\r\n            }\r\n          }\r\n        });\r\n      if (realDeployName) {\r\n        console.log(\"[Replace with DeployId\", realDeployName);\r\n        path = path.replaceAll(modelName, realDeployName);\r\n      }\r\n    }\r\n  }\r\n\r\n  const fetchUrl = cloudflareAIGatewayUrl(`${baseUrl}/${path}`);\r\n  console.log(\"fetchUrl\", fetchUrl);\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-store\",\r\n      [authHeaderName]: authValue,\r\n      ...(serverConfig.openaiOrgId && {\r\n        \"OpenAI-Organization\": serverConfig.openaiOrgId,\r\n      }),\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    // to fix #2485: https://stackoverflow.com/questions/55920957/cloudflare-worker-typeerror-one-time-use-body\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse gpt4 request\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          [\r\n            ServiceProvider.OpenAI,\r\n            ServiceProvider.Azure,\r\n            jsonBody?.model as string, // support provider-unspecified model\r\n          ],\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(\"[OpenAI] gpt4 filter\", e);\r\n    }\r\n  }\r\n\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // Extract the OpenAI-Organization header from the response\r\n    const openaiOrganizationHeader = res.headers.get(\"OpenAI-Organization\");\r\n\r\n    // Check if serverConfig.openaiOrgId is defined and not an empty string\r\n    if (serverConfig.openaiOrgId && serverConfig.openaiOrgId.trim() !== \"\") {\r\n      // If openaiOrganizationHeader is present, log it; otherwise, log that the header is not present\r\n      console.log(\"[Org ID]\", openaiOrganizationHeader);\r\n    } else {\r\n      console.log(\"[Org ID] is not set up.\");\r\n    }\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    // Conditionally delete the OpenAI-Organization header from the response if [Org ID] is undefined or empty (not setup in ENV)\r\n    // Also, this is to prevent the header from being sent to the client\r\n    if (!serverConfig.openaiOrgId || serverConfig.openaiOrgId.trim() === \"\") {\r\n      newHeaders.delete(\"OpenAI-Organization\");\r\n    }\r\n\r\n    // The latest version of the OpenAI API forced the content-encoding to be \"br\" in json response\r\n    // So if the streaming is disabled, we need to remove the content-encoding header\r\n    // Because Vercel uses gzip to compress the response, if we don't remove the content-encoding header\r\n    // The browser will try to decode the response with brotli and fail\r\n    newHeaders.delete(\"content-encoding\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { type OpenAIListModelResponse } from \"@/app/client/platforms/openai\";\r\nimport { getServerSideConfig } from \"@/app/config/server\";\r\nimport { ModelProvider, OpenaiPath } from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"./auth\";\r\nimport { requestOpenai } from \"./common\";\r\n\r\nconst ALLOWED_PATH = new Set(Object.values(OpenaiPath));\r\n\r\nfunction getModels(remoteModelRes: OpenAIListModelResponse) {\r\n  const config = getServerSideConfig();\r\n\r\n  if (config.disableGPT4) {\r\n    remoteModelRes.data = remoteModelRes.data.filter(\r\n      (m) =>\r\n        !(\r\n          m.id.startsWith(\"gpt-4\") ||\r\n          m.id.startsWith(\"chatgpt-4o\") ||\r\n          m.id.startsWith(\"o1\") ||\r\n          m.id.startsWith(\"o3\")\r\n        ) || m.id.startsWith(\"gpt-4o-mini\"),\r\n    );\r\n  }\r\n\r\n  return remoteModelRes;\r\n}\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[OpenAI Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const subpath = params.path.join(\"/\");\r\n\r\n  if (!ALLOWED_PATH.has(subpath)) {\r\n    console.log(\"[OpenAI Route] forbidden path \", subpath);\r\n    return NextResponse.json(\r\n      {\r\n        error: true,\r\n        msg: \"you are not allowed to request \" + subpath,\r\n      },\r\n      {\r\n        status: 403,\r\n      },\r\n    );\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.GPT);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await requestOpenai(req);\r\n\r\n    // list models\r\n    if (subpath === OpenaiPath.ListModelPath && response.status === 200) {\r\n      const resJson = (await response.json()) as OpenAIListModelResponse;\r\n      const availableModels = getModels(resJson);\r\n      return NextResponse.json(availableModels, {\r\n        status: response.status,\r\n      });\r\n    }\r\n\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[OpenAI] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n","import { ModelProvider } from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"./auth\";\r\nimport { requestOpenai } from \"./common\";\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[Azure Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const subpath = params.path.join(\"/\");\r\n\r\n  const authResult = auth(req, ModelProvider.GPT);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    return await requestOpenai(req);\r\n  } catch (e) {\r\n    console.error(\"[Azure] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n","import { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"./auth\";\r\nimport { getServerSideConfig } from \"@/app/config/server\";\r\nimport { ApiPath, GEMINI_BASE_URL, ModelProvider } from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { provider: string; path: string[] } },\r\n) {\r\n  console.log(\"[Google Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.GeminiPro);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  const bearToken =\r\n    req.headers.get(\"x-goog-api-key\") || req.headers.get(\"Authorization\") || \"\";\r\n  const token = bearToken.trim().replaceAll(\"Bearer \", \"\").trim();\r\n\r\n  const apiKey = token ? token : serverConfig.googleApiKey;\r\n\r\n  if (!apiKey) {\r\n    return NextResponse.json(\r\n      {\r\n        error: true,\r\n        message: `missing GOOGLE_API_KEY in server env vars`,\r\n      },\r\n      {\r\n        status: 401,\r\n      },\r\n    );\r\n  }\r\n  try {\r\n    const response = await request(req, apiKey);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[Google] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nexport const GET = handle;\r\nexport const POST = handle;\r\n\r\nexport const runtime = \"edge\";\r\nexport const preferredRegion = [\r\n  \"bom1\",\r\n  \"cle1\",\r\n  \"cpt1\",\r\n  \"gru1\",\r\n  \"hnd1\",\r\n  \"iad1\",\r\n  \"icn1\",\r\n  \"kix1\",\r\n  \"pdx1\",\r\n  \"sfo1\",\r\n  \"sin1\",\r\n  \"syd1\",\r\n];\r\n\r\nasync function request(req: NextRequest, apiKey: string) {\r\n  const controller = new AbortController();\r\n\r\n  let baseUrl = serverConfig.googleUrl || GEMINI_BASE_URL;\r\n\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Google, \"\");\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n  const fetchUrl = `${baseUrl}${path}${\r\n    req?.nextUrl?.searchParams?.get(\"alt\") === \"sse\" ? \"?alt=sse\" : \"\"\r\n  }`;\r\n\r\n  console.log(\"[Fetch Url] \", fetchUrl);\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-store\",\r\n      \"x-goog-api-key\":\r\n        req.headers.get(\"x-goog-api-key\") ||\r\n        (req.headers.get(\"Authorization\") ?? \"\").replace(\"Bearer \", \"\"),\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    // to fix #2485: https://stackoverflow.com/questions/55920957/cloudflare-worker-typeerror-one-time-use-body\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  ANTHROPIC_BASE_URL,\r\n  Anthropic,\r\n  ApiPath,\r\n  ServiceProvider,\r\n  ModelProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"./auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\nimport { cloudflareAIGatewayUrl } from \"@/app/utils/cloudflare\";\r\n\r\nconst ALLOWD_PATH = new Set([Anthropic.ChatPath, Anthropic.ChatPath1]);\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[Anthropic Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const subpath = params.path.join(\"/\");\r\n\r\n  if (!ALLOWD_PATH.has(subpath)) {\r\n    console.log(\"[Anthropic Route] forbidden path \", subpath);\r\n    return NextResponse.json(\r\n      {\r\n        error: true,\r\n        msg: \"you are not allowed to request \" + subpath,\r\n      },\r\n      {\r\n        status: 403,\r\n      },\r\n    );\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.Claude);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[Anthropic] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  let authHeaderName = \"x-api-key\";\r\n  let authValue =\r\n    req.headers.get(authHeaderName) ||\r\n    req.headers.get(\"Authorization\")?.replaceAll(\"Bearer \", \"\").trim() ||\r\n    serverConfig.anthropicApiKey ||\r\n    \"\";\r\n\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Anthropic, \"\");\r\n\r\n  let baseUrl =\r\n    serverConfig.anthropicUrl || serverConfig.baseUrl || ANTHROPIC_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  // try rebuild url, when using cloudflare ai gateway in server\r\n  const fetchUrl = cloudflareAIGatewayUrl(`${baseUrl}${path}`);\r\n\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Cache-Control\": \"no-store\",\r\n      \"anthropic-dangerous-direct-browser-access\": \"true\",\r\n      [authHeaderName]: authValue,\r\n      \"anthropic-version\":\r\n        req.headers.get(\"anthropic-version\") ||\r\n        serverConfig.anthropicApiVersion ||\r\n        Anthropic.Vision,\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.Anthropic as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[Anthropic] filter`, e);\r\n    }\r\n  }\r\n  // console.log(\"[Anthropic request]\", fetchOptions.headers, req.method);\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // console.log(\r\n    //   \"[Anthropic response]\",\r\n    //   res.status,\r\n    //   \"   \",\r\n    //   res.headers,\r\n    //   res.url,\r\n    // );\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { BAIDU_OATUH_URL } from \"../constant\";\r\n/**\r\n * 使用 AK，SK 生成鉴权签名（Access Token）\r\n * @return 鉴权签名信息\r\n */\r\nexport async function getAccessToken(\r\n  clientId: string,\r\n  clientSecret: string,\r\n): Promise<{\r\n  access_token: string;\r\n  expires_in: number;\r\n  error?: number;\r\n}> {\r\n  const res = await fetch(\r\n    `${BAIDU_OATUH_URL}?grant_type=client_credentials&client_id=${clientId}&client_secret=${clientSecret}`,\r\n    {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n    },\r\n  );\r\n  const resJson = await res.json();\r\n  return resJson;\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  BAIDU_BASE_URL,\r\n  ApiPath,\r\n  ModelProvider,\r\n  ServiceProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"@/app/api/auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\nimport { getAccessToken } from \"@/app/utils/baidu\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[Baidu Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.Ernie);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  if (!serverConfig.baiduApiKey || !serverConfig.baiduSecretKey) {\r\n    return NextResponse.json(\r\n      {\r\n        error: true,\r\n        message: `missing BAIDU_API_KEY or BAIDU_SECRET_KEY in server env vars`,\r\n      },\r\n      {\r\n        status: 401,\r\n      },\r\n    );\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[Baidu] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Baidu, \"\");\r\n\r\n  let baseUrl = serverConfig.baiduUrl || BAIDU_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const { access_token } = await getAccessToken(\r\n    serverConfig.baiduApiKey as string,\r\n    serverConfig.baiduSecretKey as string,\r\n  );\r\n  const fetchUrl = `${baseUrl}${path}?access_token=${access_token}`;\r\n\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.Baidu as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[Baidu] filter`, e);\r\n    }\r\n  }\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  BYTEDANCE_BASE_URL,\r\n  ApiPath,\r\n  ModelProvider,\r\n  ServiceProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"@/app/api/auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[ByteDance Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.Doubao);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[ByteDance] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.ByteDance, \"\");\r\n\r\n  let baseUrl = serverConfig.bytedanceUrl || BYTEDANCE_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const fetchUrl = `${baseUrl}${path}`;\r\n\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.ByteDance as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[ByteDance] filter`, e);\r\n    }\r\n  }\r\n\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  ALIBABA_BASE_URL,\r\n  ApiPath,\r\n  ModelProvider,\r\n  ServiceProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"@/app/api/auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[Alibaba Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.Qwen);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[Alibaba] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  // alibaba use base url or just remove the path\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Alibaba, \"\");\r\n\r\n  let baseUrl = serverConfig.alibabaUrl || ALIBABA_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const fetchUrl = `${baseUrl}${path}`;\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\r\n      \"X-DashScope-SSE\": req.headers.get(\"X-DashScope-SSE\") ?? \"disable\",\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.Alibaba as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[Alibaba] filter`, e);\r\n    }\r\n  }\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  MOONSHOT_BASE_URL,\r\n  ApiPath,\r\n  ModelProvider,\r\n  ServiceProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"@/app/api/auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[Moonshot Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.Moonshot);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[Moonshot] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  // alibaba use base url or just remove the path\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Moonshot, \"\");\r\n\r\n  let baseUrl = serverConfig.moonshotUrl || MOONSHOT_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const fetchUrl = `${baseUrl}${path}`;\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.Moonshot as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[Moonshot] filter`, e);\r\n    }\r\n  }\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { NextRequest, NextResponse } from \"next/server\";\r\nimport { getServerSideConfig } from \"@/app/config/server\";\r\nimport { ModelProvider, STABILITY_BASE_URL } from \"@/app/constant\";\r\nimport { auth } from \"@/app/api/auth\";\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[Stability] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const controller = new AbortController();\r\n\r\n  const serverConfig = getServerSideConfig();\r\n\r\n  let baseUrl = serverConfig.stabilityUrl || STABILITY_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(\"/api/stability/\", \"\");\r\n\r\n  console.log(\"[Stability Proxy] \", path);\r\n  console.log(\"[Stability Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const authResult = auth(req, ModelProvider.Stability);\r\n\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  const bearToken = req.headers.get(\"Authorization\") ?? \"\";\r\n  const token = bearToken.trim().replaceAll(\"Bearer \", \"\").trim();\r\n\r\n  const key = token ? token : serverConfig.stabilityApiKey;\r\n\r\n  if (!key) {\r\n    return NextResponse.json(\r\n      {\r\n        error: true,\r\n        message: `missing STABILITY_API_KEY in server env vars`,\r\n      },\r\n      {\r\n        status: 401,\r\n      },\r\n    );\r\n  }\r\n\r\n  const fetchUrl = `${baseUrl}/${path}`;\r\n  console.log(\"[Stability Url] \", fetchUrl);\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": req.headers.get(\"Content-Type\") || \"multipart/form-data\",\r\n      Accept: req.headers.get(\"Accept\") || \"application/json\",\r\n      Authorization: `Bearer ${key}`,\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    // to fix #2485: https://stackoverflow.com/questions/55920957/cloudflare-worker-typeerror-one-time-use-body\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  IFLYTEK_BASE_URL,\r\n  ApiPath,\r\n  ModelProvider,\r\n  ServiceProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"@/app/api/auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\n// iflytek\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[Iflytek Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.Iflytek);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[Iflytek] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  // iflytek use base url or just remove the path\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.Iflytek, \"\");\r\n\r\n  let baseUrl = serverConfig.iflytekUrl || IFLYTEK_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const fetchUrl = `${baseUrl}${path}`;\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.Iflytek as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[Iflytek] filter`, e);\r\n    }\r\n  }\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  DEEPSEEK_BASE_URL,\r\n  ApiPath,\r\n  ModelProvider,\r\n  ServiceProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"@/app/api/auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[DeepSeek Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.DeepSeek);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[DeepSeek] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  // alibaba use base url or just remove the path\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.DeepSeek, \"\");\r\n\r\n  let baseUrl = serverConfig.deepseekUrl || DEEPSEEK_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const fetchUrl = `${baseUrl}${path}`;\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.DeepSeek as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[DeepSeek] filter`, e);\r\n    }\r\n  }\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  SILICONFLOW_BASE_URL,\r\n  ApiPath,\r\n  ModelProvider,\r\n  ServiceProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"@/app/api/auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[SiliconFlow Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.SiliconFlow);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[SiliconFlow] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  // alibaba use base url or just remove the path\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.SiliconFlow, \"\");\r\n\r\n  let baseUrl = serverConfig.siliconFlowUrl || SILICONFLOW_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const fetchUrl = `${baseUrl}${path}`;\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.SiliconFlow as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[SiliconFlow] filter`, e);\r\n    }\r\n  }\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  XAI_BASE_URL,\r\n  ApiPath,\r\n  ModelProvider,\r\n  ServiceProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"@/app/api/auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[XAI Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.XAI);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[XAI] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  // alibaba use base url or just remove the path\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.XAI, \"\");\r\n\r\n  let baseUrl = serverConfig.xaiUrl || XAI_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const fetchUrl = `${baseUrl}${path}`;\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.XAI as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[XAI] filter`, e);\r\n    }\r\n  }\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { getServerSideConfig } from \"@/app/config/server\";\r\nimport {\r\n  CHATGLM_BASE_URL,\r\n  ApiPath,\r\n  ModelProvider,\r\n  ServiceProvider,\r\n} from \"@/app/constant\";\r\nimport { prettyObject } from \"@/app/utils/format\";\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport { auth } from \"@/app/api/auth\";\r\nimport { isModelNotavailableInServer } from \"@/app/utils/model\";\r\n\r\nconst serverConfig = getServerSideConfig();\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[GLM Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n\r\n  const authResult = auth(req, ModelProvider.ChatGLM);\r\n  if (authResult.error) {\r\n    return NextResponse.json(authResult, {\r\n      status: 401,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const response = await request(req);\r\n    return response;\r\n  } catch (e) {\r\n    console.error(\"[GLM] \", e);\r\n    return NextResponse.json(prettyObject(e));\r\n  }\r\n}\r\n\r\nasync function request(req: NextRequest) {\r\n  const controller = new AbortController();\r\n\r\n  // alibaba use base url or just remove the path\r\n  let path = `${req.nextUrl.pathname}`.replaceAll(ApiPath.ChatGLM, \"\");\r\n\r\n  let baseUrl = serverConfig.chatglmUrl || CHATGLM_BASE_URL;\r\n\r\n  if (!baseUrl.startsWith(\"http\")) {\r\n    baseUrl = `https://${baseUrl}`;\r\n  }\r\n\r\n  if (baseUrl.endsWith(\"/\")) {\r\n    baseUrl = baseUrl.slice(0, -1);\r\n  }\r\n\r\n  console.log(\"[Proxy] \", path);\r\n  console.log(\"[Base Url]\", baseUrl);\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  const fetchUrl = `${baseUrl}${path}`;\r\n  console.log(\"[Fetch Url] \", fetchUrl);\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: req.headers.get(\"Authorization\") ?? \"\",\r\n    },\r\n    method: req.method,\r\n    body: req.body,\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  // #1815 try to refuse some request to some models\r\n  if (serverConfig.customModels && req.body) {\r\n    try {\r\n      const clonedBody = await req.text();\r\n      fetchOptions.body = clonedBody;\r\n\r\n      const jsonBody = JSON.parse(clonedBody) as { model?: string };\r\n\r\n      // not undefined and is false\r\n      if (\r\n        isModelNotavailableInServer(\r\n          serverConfig.customModels,\r\n          jsonBody?.model as string,\r\n          ServiceProvider.ChatGLM as string,\r\n        )\r\n      ) {\r\n        return NextResponse.json(\r\n          {\r\n            error: true,\r\n            message: `you are not allowed to use ${jsonBody?.model} model`,\r\n          },\r\n          {\r\n            status: 403,\r\n          },\r\n        );\r\n      }\r\n    } catch (e) {\r\n      console.error(`[GLM] filter`, e);\r\n    }\r\n  }\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { NextRequest, NextResponse } from \"next/server\";\r\nimport { getServerSideConfig } from \"@/app/config/server\";\r\n\r\nexport async function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { path: string[] } },\r\n) {\r\n  console.log(\"[Proxy Route] params \", params);\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n  const serverConfig = getServerSideConfig();\r\n\r\n  // remove path params from searchParams\r\n  req.nextUrl.searchParams.delete(\"path\");\r\n  req.nextUrl.searchParams.delete(\"provider\");\r\n\r\n  const subpath = params.path.join(\"/\");\r\n  const fetchUrl = `${req.headers.get(\r\n    \"x-base-url\",\r\n  )}/${subpath}?${req.nextUrl.searchParams.toString()}`;\r\n  const skipHeaders = [\"connection\", \"host\", \"origin\", \"referer\", \"cookie\"];\r\n  const headers = new Headers(\r\n    Array.from(req.headers.entries()).filter((item) => {\r\n      if (\r\n        item[0].indexOf(\"x-\") > -1 ||\r\n        item[0].indexOf(\"sec-\") > -1 ||\r\n        skipHeaders.includes(item[0])\r\n      ) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }),\r\n  );\r\n  // if dalle3 use openai api key\r\n    const baseUrl = req.headers.get(\"x-base-url\");\r\n    if (baseUrl?.includes(\"api.openai.com\")) {\r\n      if (!serverConfig.apiKey) {\r\n        return NextResponse.json(\r\n          { error: \"OpenAI API key not configured\" },\r\n          { status: 500 },\r\n        );\r\n      }\r\n      headers.set(\"Authorization\", `Bearer ${serverConfig.apiKey}`);\r\n    }\r\n\r\n  const controller = new AbortController();\r\n  const fetchOptions: RequestInit = {\r\n    headers,\r\n    method: req.method,\r\n    body: req.body,\r\n    // to fix #2485: https://stackoverflow.com/questions/55920957/cloudflare-worker-typeerror-one-time-use-body\r\n    redirect: \"manual\",\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n    signal: controller.signal,\r\n  };\r\n\r\n  const timeoutId = setTimeout(\r\n    () => {\r\n      controller.abort();\r\n    },\r\n    10 * 60 * 1000,\r\n  );\r\n\r\n  try {\r\n    const res = await fetch(fetchUrl, fetchOptions);\r\n    // to prevent browser prompt for credentials\r\n    const newHeaders = new Headers(res.headers);\r\n    newHeaders.delete(\"www-authenticate\");\r\n    // to disable nginx buffering\r\n    newHeaders.set(\"X-Accel-Buffering\", \"no\");\r\n\r\n    // The latest version of the OpenAI API forced the content-encoding to be \"br\" in json response\r\n    // So if the streaming is disabled, we need to remove the content-encoding header\r\n    // Because Vercel uses gzip to compress the response, if we don't remove the content-encoding header\r\n    // The browser will try to decode the response with brotli and fail\r\n    newHeaders.delete(\"content-encoding\");\r\n\r\n    return new Response(res.body, {\r\n      status: res.status,\r\n      statusText: res.statusText,\r\n      headers: newHeaders,\r\n    });\r\n  } finally {\r\n    clearTimeout(timeoutId);\r\n  }\r\n}\r\n","import { ApiPath } from \"@/app/constant\";\r\nimport { NextRequest } from \"next/server\";\r\nimport { handle as openaiHandler } from \"../../openai\";\r\nimport { handle as azureHandler } from \"../../azure\";\r\nimport { handle as googleHandler } from \"../../google\";\r\nimport { handle as anthropicHandler } from \"../../anthropic\";\r\nimport { handle as baiduHandler } from \"../../baidu\";\r\nimport { handle as bytedanceHandler } from \"../../bytedance\";\r\nimport { handle as alibabaHandler } from \"../../alibaba\";\r\nimport { handle as moonshotHandler } from \"../../moonshot\";\r\nimport { handle as stabilityHandler } from \"../../stability\";\r\nimport { handle as iflytekHandler } from \"../../iflytek\";\r\nimport { handle as deepseekHandler } from \"../../deepseek\";\r\nimport { handle as siliconflowHandler } from \"../../siliconflow\";\r\nimport { handle as xaiHandler } from \"../../xai\";\r\nimport { handle as chatglmHandler } from \"../../glm\";\r\nimport { handle as proxyHandler } from \"../../proxy\";\r\n\r\nasync function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { provider: string; path: string[] } },\r\n) {\r\n  const apiPath = `/api/${params.provider}`;\r\n  console.log(`[${params.provider} Route] params `, params);\r\n  switch (apiPath) {\r\n    case ApiPath.Azure:\r\n      return azureHandler(req, { params });\r\n    case ApiPath.Google:\r\n      return googleHandler(req, { params });\r\n    case ApiPath.Anthropic:\r\n      return anthropicHandler(req, { params });\r\n    case ApiPath.Baidu:\r\n      return baiduHandler(req, { params });\r\n    case ApiPath.ByteDance:\r\n      return bytedanceHandler(req, { params });\r\n    case ApiPath.Alibaba:\r\n      return alibabaHandler(req, { params });\r\n    // case ApiPath.Tencent: using \"/api/tencent\"\r\n    case ApiPath.Moonshot:\r\n      return moonshotHandler(req, { params });\r\n    case ApiPath.Stability:\r\n      return stabilityHandler(req, { params });\r\n    case ApiPath.Iflytek:\r\n      return iflytekHandler(req, { params });\r\n    case ApiPath.DeepSeek:\r\n      return deepseekHandler(req, { params });\r\n    case ApiPath.XAI:\r\n      return xaiHandler(req, { params });\r\n    case ApiPath.ChatGLM:\r\n      return chatglmHandler(req, { params });\r\n    case ApiPath.SiliconFlow:\r\n      return siliconflowHandler(req, { params });\r\n    case ApiPath.OpenAI:\r\n      return openaiHandler(req, { params });\r\n    default:\r\n      return proxyHandler(req, { params });\r\n  }\r\n}\r\n\r\nexport const GET = handle;\r\nexport const POST = handle;\r\n\r\nexport const runtime = \"edge\";\r\nexport const preferredRegion = [\r\n  \"arn1\",\r\n  \"bom1\",\r\n  \"cdg1\",\r\n  \"cle1\",\r\n  \"cpt1\",\r\n  \"dub1\",\r\n  \"fra1\",\r\n  \"gru1\",\r\n  \"hnd1\",\r\n  \"iad1\",\r\n  \"icn1\",\r\n  \"kix1\",\r\n  \"lhr1\",\r\n  \"pdx1\",\r\n  \"sfo1\",\r\n  \"sin1\",\r\n  \"syd1\",\r\n];\r\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"D:\\\\z-toolkit\\\\NextChat\\\\app\\\\api\\\\[provider]\\\\[...path]\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/[provider]/[...path]/route\",\n        pathname: \"/api/[provider]/[...path]\",\n        filename: \"route\",\n        bundlePath: \"app/api/[provider]/[...path]/route\"\n    },\n    resolvedPagePath: \"D:\\\\z-toolkit\\\\NextChat\\\\app\\\\api\\\\[provider]\\\\[...path]\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/[provider]/[...path]/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2F%5Bprovider%5D%2F%5B...path%5D%2Froute&page=%2Fapi%2F%5Bprovider%5D%2F%5B...path%5D%2Froute&pagePath=private-next-app-dir%2Fapi%2F%5Bprovider%5D%2F%5B...path%5D%2Froute.ts&appDir=D%3A%5Cz-toolkit%5CNextChat%5Capp&appPaths=%2Fapi%2F%5Bprovider%5D%2F%5B...path%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=arn1&preferredRegion=bom1&preferredRegion=cdg1&preferredRegion=cle1&preferredRegion=cpt1&preferredRegion=dub1&preferredRegion=fra1&preferredRegion=gru1&preferredRegion=hnd1&preferredRegion=iad1&preferredRegion=icn1&preferredRegion=kix1&preferredRegion=lhr1&preferredRegion=pdx1&preferredRegion=sfo1&preferredRegion=sin1&preferredRegion=syd1&middlewareConfig=e30%3D!private-next-app-dir/api/[provider]/[...path]/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map","import { NextRequest } from \"next/server\";\r\nimport { getServerSideConfig } from \"../config/server\";\r\nimport md5 from \"spark-md5\";\r\nimport { ACCESS_CODE_PREFIX, ModelProvider } from \"../constant\";\r\n\r\nfunction getIP(req: NextRequest) {\r\n  let ip = req.ip ?? req.headers.get(\"x-real-ip\");\r\n  const forwardedFor = req.headers.get(\"x-forwarded-for\");\r\n\r\n  if (!ip && forwardedFor) {\r\n    ip = forwardedFor.split(\",\").at(0) ?? \"\";\r\n  }\r\n\r\n  return ip;\r\n}\r\n\r\nfunction parseApiKey(bearToken: string) {\r\n  const token = bearToken.trim().replaceAll(\"Bearer \", \"\").trim();\r\n  const isApiKey = !token.startsWith(ACCESS_CODE_PREFIX);\r\n\r\n  return {\r\n    accessCode: isApiKey ? \"\" : token.slice(ACCESS_CODE_PREFIX.length),\r\n    apiKey: isApiKey ? token : \"\",\r\n  };\r\n}\r\n\r\nexport function auth(req: NextRequest, modelProvider: ModelProvider) {\r\n  const authToken = req.headers.get(\"Authorization\") ?? \"\";\r\n\r\n  // check if it is openai api key or user token\r\n  const { accessCode, apiKey } = parseApiKey(authToken);\r\n\r\n  const hashedCode = md5.hash(accessCode ?? \"\").trim();\r\n\r\n  const serverConfig = getServerSideConfig();\r\n  console.log(\"[Auth] allowed hashed codes: \", [...serverConfig.codes]);\r\n  console.log(\"[Auth] got access code:\", accessCode);\r\n  console.log(\"[Auth] hashed access code:\", hashedCode);\r\n  console.log(\"[User IP] \", getIP(req));\r\n  console.log(\"[Time] \", new Date().toLocaleString());\r\n\r\n  if (serverConfig.needCode && !serverConfig.codes.has(hashedCode) && !apiKey) {\r\n    return {\r\n      error: true,\r\n      msg: !accessCode ? \"empty access code\" : \"wrong access code\",\r\n    };\r\n  }\r\n\r\n  if (serverConfig.hideUserApiKey && !!apiKey) {\r\n    return {\r\n      error: true,\r\n      msg: \"you are not allowed to access with your own api key\",\r\n    };\r\n  }\r\n\r\n  // if user does not provide an api key, inject system api key\r\n  if (!apiKey) {\r\n    const serverConfig = getServerSideConfig();\r\n\r\n    // const systemApiKey =\r\n    //   modelProvider === ModelProvider.GeminiPro\r\n    //     ? serverConfig.googleApiKey\r\n    //     : serverConfig.isAzure\r\n    //     ? serverConfig.azureApiKey\r\n    //     : serverConfig.apiKey;\r\n\r\n    let systemApiKey: string | undefined;\r\n\r\n    switch (modelProvider) {\r\n      case ModelProvider.Stability:\r\n        systemApiKey = serverConfig.stabilityApiKey;\r\n        break;\r\n      case ModelProvider.GeminiPro:\r\n        systemApiKey = serverConfig.googleApiKey;\r\n        break;\r\n      case ModelProvider.Claude:\r\n        systemApiKey = serverConfig.anthropicApiKey;\r\n        break;\r\n      case ModelProvider.Doubao:\r\n        systemApiKey = serverConfig.bytedanceApiKey;\r\n        break;\r\n      case ModelProvider.Ernie:\r\n        systemApiKey = serverConfig.baiduApiKey;\r\n        break;\r\n      case ModelProvider.Qwen:\r\n        systemApiKey = serverConfig.alibabaApiKey;\r\n        break;\r\n      case ModelProvider.Moonshot:\r\n        systemApiKey = serverConfig.moonshotApiKey;\r\n        break;\r\n      case ModelProvider.Iflytek:\r\n        systemApiKey =\r\n          serverConfig.iflytekApiKey + \":\" + serverConfig.iflytekApiSecret;\r\n        break;\r\n      case ModelProvider.DeepSeek:\r\n        systemApiKey = serverConfig.deepseekApiKey;\r\n        break;\r\n      case ModelProvider.XAI:\r\n        systemApiKey = serverConfig.xaiApiKey;\r\n        break;\r\n      case ModelProvider.ChatGLM:\r\n        systemApiKey = serverConfig.chatglmApiKey;\r\n        break;\r\n      case ModelProvider.SiliconFlow:\r\n        systemApiKey = serverConfig.siliconFlowApiKey;\r\n        break;\r\n      case ModelProvider.GPT:\r\n      default:\r\n        if (req.nextUrl.pathname.includes(\"azure/deployments\")) {\r\n          systemApiKey = serverConfig.azureApiKey;\r\n        } else {\r\n          systemApiKey = serverConfig.apiKey;\r\n        }\r\n    }\r\n\r\n    if (systemApiKey) {\r\n      console.log(\"[Auth] use system api key\");\r\n      req.headers.set(\"Authorization\", `Bearer ${systemApiKey}`);\r\n    } else {\r\n      console.log(\"[Auth] admin did not provide an api key\");\r\n    }\r\n  } else {\r\n    console.log(\"[Auth] use user api key\");\r\n  }\r\n\r\n  return {\r\n    error: false,\r\n  };\r\n}\r\n","export function prettyObject(msg: any) {\r\n  const obj = msg;\r\n  if (typeof msg !== \"string\") {\r\n    msg = JSON.stringify(msg, null, \"  \");\r\n  }\r\n  if (msg === \"{}\") {\r\n    return obj.toString();\r\n  }\r\n  if (msg.startsWith(\"```json\")) {\r\n    return msg;\r\n  }\r\n  return [\"```json\", msg, \"```\"].join(\"\\n\");\r\n}\r\n\r\nexport function* chunks(s: string, maxBytes = 1000 * 1000) {\r\n  const decoder = new TextDecoder(\"utf-8\");\r\n  let buf = new TextEncoder().encode(s);\r\n  while (buf.length) {\r\n    let i = buf.lastIndexOf(32, maxBytes + 1);\r\n    // If no space found, try forward search\r\n    if (i < 0) i = buf.indexOf(32, maxBytes);\r\n    // If there's no space at all, take all\r\n    if (i < 0) i = buf.length;\r\n    // This is a safe cut-off point; never half-way a multi-byte\r\n    yield decoder.decode(buf.slice(0, i));\r\n    buf = buf.slice(i + 1); // Skip space (if any)\r\n  }\r\n}\r\n"],"names":["module","exports","require","cloudflareAIGatewayUrl","fetchUrl","paths","split","slice","concat","join","serverConfig","getServerSideConfig","requestOpenai","req","controller","AbortController","isAzure","nextUrl","pathname","includes","authValue","authHeaderName","headers","get","trim","replaceAll","path","baseUrl","azureUrl","OPENAI_BASE_URL","startsWith","endsWith","console","log","timeoutId","setTimeout","abort","azureApiVersion","searchParams","shift","customModels","modelName","realDeployName","filter","v","forEach","fullName","displayName","m","_","providerName","getModelProvider","deployId","fetchOptions","openaiOrgId","method","body","redirect","duplex","signal","clonedBody","text","jsonBody","JSON","parse","isModelNotavailableInServer","model","ServiceProvider","OpenAI","Azure","NextResponse","json","error","message","status","e","res","fetch","openaiOrganizationHeader","newHeaders","Headers","delete","set","Response","statusText","clearTimeout","ALLOWED_PATH","Set","Object","values","OpenaiPath","handle","params","subpath","has","msg","authResult","auth","ModelProvider","GPT","response","ListModelPath","remoteModelRes","availableModels","config","disableGPT4","data","id","prettyObject","GeminiPro","apiKey","token","googleApiKey","request","googleUrl","GEMINI_BASE_URL","ApiPath","Google","replace","ALLOWD_PATH","Anthropic","ChatPath","ChatPath1","Claude","anthropicApiKey","anthropicUrl","ANTHROPIC_BASE_URL","anthropicApiVersion","Vision","getAccessToken","clientId","clientSecret","BAIDU_OATUH_URL","mode","Ernie","baiduApiKey","baiduSecretKey","Baidu","baiduUrl","BAIDU_BASE_URL","access_token","Doubao","ByteDance","bytedanceUrl","BYTEDANCE_BASE_URL","Authorization","Qwen","Alibaba","alibabaUrl","ALIBABA_BASE_URL","Moonshot","moonshotUrl","MOONSHOT_BASE_URL","stabilityUrl","STABILITY_BASE_URL","Stability","key","stabilityApiKey","Accept","Iflytek","iflytekUrl","IFLYTEK_BASE_URL","DeepSeek","deepseekUrl","DEEPSEEK_BASE_URL","SiliconFlow","siliconFlowUrl","SILICONFLOW_BASE_URL","XAI","xaiUrl","XAI_BASE_URL","ChatGLM","chatglmUrl","CHATGLM_BASE_URL","toString","skipHeaders","Array","from","entries","item","indexOf","apiPath","provider","azureHandler","googleHandler","anthropicHandler","baiduHandler","bytedanceHandler","alibabaHandler","moonshotHandler","stabilityHandler","iflytekHandler","deepseekHandler","xaiHandler","chatglmHandler","siliconflowHandler","openaiHandler","proxyHandler","GET","POST","runtime","preferredRegion","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","headerHooks","staticGenerationBailout","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2F_5Bprovider_5D_2F_5B_path_5D_2Froute_ts_page_2Fapi_2F_5Bprovider_5D_2F_5B_path_5D_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGJTVCcHJvdmlkZXIlNUQlMkYlNUIuLi5wYXRoJTVEJTJGcm91dGUmcGFnZT0lMkZhcGklMkYlNUJwcm92aWRlciU1RCUyRiU1Qi4uLnBhdGglNUQlMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRiU1QnByb3ZpZGVyJTVEJTJGJTVCLi4ucGF0aCU1RCUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDei10b29sa2l0JTVDTmV4dENoYXQlNUNhcHAmYXBwUGF0aHM9JTJGYXBpJTJGJTVCcHJvdmlkZXIlNUQlMkYlNUIuLi5wYXRoJTVEJTJGcm91dGUmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249YXJuMSZwcmVmZXJyZWRSZWdpb249Ym9tMSZwcmVmZXJyZWRSZWdpb249Y2RnMSZwcmVmZXJyZWRSZWdpb249Y2xlMSZwcmVmZXJyZWRSZWdpb249Y3B0MSZwcmVmZXJyZWRSZWdpb249ZHViMSZwcmVmZXJyZWRSZWdpb249ZnJhMSZwcmVmZXJyZWRSZWdpb249Z3J1MSZwcmVmZXJyZWRSZWdpb249aG5kMSZwcmVmZXJyZWRSZWdpb249aWFkMSZwcmVmZXJyZWRSZWdpb249aWNuMSZwcmVmZXJyZWRSZWdpb249a2l4MSZwcmVmZXJyZWRSZWdpb249bGhyMSZwcmVmZXJyZWRSZWdpb249cGR4MSZwcmVmZXJyZWRSZWdpb249c2ZvMSZwcmVmZXJyZWRSZWdpb249c2luMSZwcmVmZXJyZWRSZWdpb249c3lkMSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCE_3D_nextConfigOutput_standalone_preferredRegion_arn1_preferredRegion_bom1_preferredRegion_cdg1_preferredRegion_cle1_preferredRegion_cpt1_preferredRegion_dub1_preferredRegion_fra1_preferredRegion_gru1_preferredRegion_hnd1_preferredRegion_iad1_preferredRegion_icn1_preferredRegion_kix1_preferredRegion_lhr1_preferredRegion_pdx1_preferredRegion_sfo1_preferredRegion_sin1_preferredRegion_syd1_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap","modelProvider","accessCode","parseApiKey","bearToken","isApiKey","ACCESS_CODE_PREFIX","length","hashedCode","md5","codes","getIP","ip","forwardedFor","at","Date","toLocaleString","needCode","hideUserApiKey","systemApiKey","bytedanceApiKey","alibabaApiKey","moonshotApiKey","iflytekApiKey","iflytekApiSecret","deepseekApiKey","xaiApiKey","chatglmApiKey","siliconFlowApiKey","azureApiKey","obj","stringify"],"sourceRoot":""}