{"version":3,"file":"edge-chunks/579.js","mappings":"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AMC,eAAe;IACnB,yEAAyE;IACzE,qHAAqH;IACrH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,eAAe;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,kBAAkB;IACtB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,cAAc;IAClB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,kBAAkB;IACtB;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,eAAe;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,gBAAgB;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,gBAAgB;IAAC;IAAkB;IAAmB;CAAmB;AAE/E,MAAMC,gBAAgB;IACpB;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,iBAAiB;IAAC;IAAiB;IAAkB;CAAoB;AAE/E,MAAMC,WAAW;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAMC,gBAAgB;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CAID;AAED,MAAMC,oBAAoB;IACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,IAAIC,MAAM,MAAM,oBAAoB;AAC7B,MAAMzQ,iBAAiB;OACzB4P,aAAa/O,GAAG,CAAC,CAAC4B,OAAU;YAC7BA;YACAiO,WAAW;YACXC,QAAQF;YACRG,UAAU;gBACRxE,IAAI;gBACJyE,cAAc;gBACdC,cAAc;gBACdH,QAAQ;YACV;QA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","sources":["webpack://_N_E/./app/config/server.ts","webpack://_N_E/./app/constant.ts","webpack://_N_E/./app/utils/model.ts"],"sourcesContent":["import md5 from \"spark-md5\";\r\nimport { DEFAULT_MODELS, DEFAULT_GA_ID } from \"../constant\";\r\nimport { isGPT4Model } from \"../utils/model\";\r\n\r\ndeclare global {\r\n  namespace NodeJS {\r\n    interface ProcessEnv {\r\n      PROXY_URL?: string; // docker only\r\n\r\n      OPENAI_API_KEY?: string;\r\n      CODE?: string;\r\n\r\n      BASE_URL?: string;\r\n      OPENAI_ORG_ID?: string; // openai only\r\n\r\n      VERCEL?: string;\r\n      BUILD_MODE?: \"standalone\" | \"export\";\r\n      BUILD_APP?: string; // is building desktop app\r\n\r\n      HIDE_USER_API_KEY?: string; // disable user's api key input\r\n      DISABLE_GPT4?: string; // allow user to use gpt-4 or not\r\n      ENABLE_BALANCE_QUERY?: string; // allow user to query balance or not\r\n      DISABLE_FAST_LINK?: string; // disallow parse settings from url or not\r\n      CUSTOM_MODELS?: string; // to control custom models\r\n      DEFAULT_MODEL?: string; // to control default model in every new chat window\r\n      VISION_MODELS?: string; // to control vision models\r\n\r\n      // stability only\r\n      STABILITY_URL?: string;\r\n      STABILITY_API_KEY?: string;\r\n\r\n      // azure only\r\n      AZURE_URL?: string; // https://{azure-url}/openai/deployments/{deploy-name}\r\n      AZURE_API_KEY?: string;\r\n      AZURE_API_VERSION?: string;\r\n\r\n      // google only\r\n      GOOGLE_API_KEY?: string;\r\n      GOOGLE_URL?: string;\r\n\r\n      // google tag manager\r\n      GTM_ID?: string;\r\n\r\n      // anthropic only\r\n      ANTHROPIC_URL?: string;\r\n      ANTHROPIC_API_KEY?: string;\r\n      ANTHROPIC_API_VERSION?: string;\r\n\r\n      // baidu only\r\n      BAIDU_URL?: string;\r\n      BAIDU_API_KEY?: string;\r\n      BAIDU_SECRET_KEY?: string;\r\n\r\n      // bytedance only\r\n      BYTEDANCE_URL?: string;\r\n      BYTEDANCE_API_KEY?: string;\r\n\r\n      // alibaba only\r\n      ALIBABA_URL?: string;\r\n      ALIBABA_API_KEY?: string;\r\n\r\n      // tencent only\r\n      TENCENT_URL?: string;\r\n      TENCENT_SECRET_KEY?: string;\r\n      TENCENT_SECRET_ID?: string;\r\n\r\n      // moonshot only\r\n      MOONSHOT_URL?: string;\r\n      MOONSHOT_API_KEY?: string;\r\n\r\n      // iflytek only\r\n      IFLYTEK_URL?: string;\r\n      IFLYTEK_API_KEY?: string;\r\n      IFLYTEK_API_SECRET?: string;\r\n\r\n      DEEPSEEK_URL?: string;\r\n      DEEPSEEK_API_KEY?: string;\r\n\r\n      // xai only\r\n      XAI_URL?: string;\r\n      XAI_API_KEY?: string;\r\n\r\n      // chatglm only\r\n      CHATGLM_URL?: string;\r\n      CHATGLM_API_KEY?: string;\r\n\r\n      // siliconflow only\r\n      SILICONFLOW_URL?: string;\r\n      SILICONFLOW_API_KEY?: string;\r\n\r\n      // custom template for preprocessing user input\r\n      DEFAULT_INPUT_TEMPLATE?: string;\r\n\r\n      ENABLE_MCP?: string; // enable mcp functionality\r\n    }\r\n  }\r\n}\r\n\r\nconst ACCESS_CODES = (function getAccessCodes(): Set<string> {\r\n  const code = process.env.CODE;\r\n\r\n  try {\r\n    const codes = (code?.split(\",\") ?? [])\r\n      .filter((v) => !!v)\r\n      .map((v) => md5.hash(v.trim()));\r\n    return new Set(codes);\r\n  } catch (e) {\r\n    return new Set();\r\n  }\r\n})();\r\n\r\nfunction getApiKey(keys?: string) {\r\n  const apiKeyEnvVar = keys ?? \"\";\r\n  const apiKeys = apiKeyEnvVar.split(\",\").map((v) => v.trim());\r\n  const randomIndex = Math.floor(Math.random() * apiKeys.length);\r\n  const apiKey = apiKeys[randomIndex];\r\n  if (apiKey) {\r\n    console.log(\r\n      `[Server Config] using ${randomIndex + 1} of ${\r\n        apiKeys.length\r\n      } api key - ${apiKey}`,\r\n    );\r\n  }\r\n\r\n  return apiKey;\r\n}\r\n\r\nexport const getServerSideConfig = () => {\r\n  if (typeof process === \"undefined\") {\r\n    throw Error(\r\n      \"[Server Config] you are importing a nodejs-only module outside of nodejs\",\r\n    );\r\n  }\r\n\r\n  const disableGPT4 = !!process.env.DISABLE_GPT4;\r\n  let customModels = process.env.CUSTOM_MODELS ?? \"\";\r\n  let defaultModel = process.env.DEFAULT_MODEL ?? \"\";\r\n  let visionModels = process.env.VISION_MODELS ?? \"\";\r\n\r\n  if (disableGPT4) {\r\n    if (customModels) customModels += \",\";\r\n    customModels += DEFAULT_MODELS.filter((m) => isGPT4Model(m.name))\r\n      .map((m) => \"-\" + m.name)\r\n      .join(\",\");\r\n    if (defaultModel && isGPT4Model(defaultModel)) {\r\n      defaultModel = \"\";\r\n    }\r\n  }\r\n\r\n  const isStability = !!process.env.STABILITY_API_KEY;\r\n\r\n  const isAzure = !!process.env.AZURE_URL;\r\n  const isGoogle = !!process.env.GOOGLE_API_KEY;\r\n  const isAnthropic = !!process.env.ANTHROPIC_API_KEY;\r\n  const isTencent = !!process.env.TENCENT_API_KEY;\r\n\r\n  const isBaidu = !!process.env.BAIDU_API_KEY;\r\n  const isBytedance = !!process.env.BYTEDANCE_API_KEY;\r\n  const isAlibaba = !!process.env.ALIBABA_API_KEY;\r\n  const isMoonshot = !!process.env.MOONSHOT_API_KEY;\r\n  const isIflytek = !!process.env.IFLYTEK_API_KEY;\r\n  const isDeepSeek = !!process.env.DEEPSEEK_API_KEY;\r\n  const isXAI = !!process.env.XAI_API_KEY;\r\n  const isChatGLM = !!process.env.CHATGLM_API_KEY;\r\n  const isSiliconFlow = !!process.env.SILICONFLOW_API_KEY;\r\n  // const apiKeyEnvVar = process.env.OPENAI_API_KEY ?? \"\";\r\n  // const apiKeys = apiKeyEnvVar.split(\",\").map((v) => v.trim());\r\n  // const randomIndex = Math.floor(Math.random() * apiKeys.length);\r\n  // const apiKey = apiKeys[randomIndex];\r\n  // console.log(\r\n  //   `[Server Config] using ${randomIndex + 1} of ${apiKeys.length} api key`,\r\n  // );\r\n\r\n  const allowedWebDavEndpoints = (\r\n    process.env.WHITE_WEBDAV_ENDPOINTS ?? \"\"\r\n  ).split(\",\");\r\n\r\n  return {\r\n    baseUrl: process.env.BASE_URL,\r\n    apiKey: getApiKey(process.env.OPENAI_API_KEY),\r\n    openaiOrgId: process.env.OPENAI_ORG_ID,\r\n\r\n    isStability,\r\n    stabilityUrl: process.env.STABILITY_URL,\r\n    stabilityApiKey: getApiKey(process.env.STABILITY_API_KEY),\r\n\r\n    isAzure,\r\n    azureUrl: process.env.AZURE_URL,\r\n    azureApiKey: getApiKey(process.env.AZURE_API_KEY),\r\n    azureApiVersion: process.env.AZURE_API_VERSION,\r\n\r\n    isGoogle,\r\n    googleApiKey: getApiKey(process.env.GOOGLE_API_KEY),\r\n    googleUrl: process.env.GOOGLE_URL,\r\n\r\n    isAnthropic,\r\n    anthropicApiKey: getApiKey(process.env.ANTHROPIC_API_KEY),\r\n    anthropicApiVersion: process.env.ANTHROPIC_API_VERSION,\r\n    anthropicUrl: process.env.ANTHROPIC_URL,\r\n\r\n    isBaidu,\r\n    baiduUrl: process.env.BAIDU_URL,\r\n    baiduApiKey: getApiKey(process.env.BAIDU_API_KEY),\r\n    baiduSecretKey: process.env.BAIDU_SECRET_KEY,\r\n\r\n    isBytedance,\r\n    bytedanceApiKey: getApiKey(process.env.BYTEDANCE_API_KEY),\r\n    bytedanceUrl: process.env.BYTEDANCE_URL,\r\n\r\n    isAlibaba,\r\n    alibabaUrl: process.env.ALIBABA_URL,\r\n    alibabaApiKey: getApiKey(process.env.ALIBABA_API_KEY),\r\n\r\n    isTencent,\r\n    tencentUrl: process.env.TENCENT_URL,\r\n    tencentSecretKey: getApiKey(process.env.TENCENT_SECRET_KEY),\r\n    tencentSecretId: process.env.TENCENT_SECRET_ID,\r\n\r\n    isMoonshot,\r\n    moonshotUrl: process.env.MOONSHOT_URL,\r\n    moonshotApiKey: getApiKey(process.env.MOONSHOT_API_KEY),\r\n\r\n    isIflytek,\r\n    iflytekUrl: process.env.IFLYTEK_URL,\r\n    iflytekApiKey: process.env.IFLYTEK_API_KEY,\r\n    iflytekApiSecret: process.env.IFLYTEK_API_SECRET,\r\n\r\n    isDeepSeek,\r\n    deepseekUrl: process.env.DEEPSEEK_URL,\r\n    deepseekApiKey: getApiKey(process.env.DEEPSEEK_API_KEY),\r\n\r\n    isXAI,\r\n    xaiUrl: process.env.XAI_URL,\r\n    xaiApiKey: getApiKey(process.env.XAI_API_KEY),\r\n\r\n    isChatGLM,\r\n    chatglmUrl: process.env.CHATGLM_URL,\r\n    chatglmApiKey: getApiKey(process.env.CHATGLM_API_KEY),\r\n\r\n    cloudflareAccountId: process.env.CLOUDFLARE_ACCOUNT_ID,\r\n    cloudflareKVNamespaceId: process.env.CLOUDFLARE_KV_NAMESPACE_ID,\r\n    cloudflareKVApiKey: getApiKey(process.env.CLOUDFLARE_KV_API_KEY),\r\n    cloudflareKVTTL: process.env.CLOUDFLARE_KV_TTL,\r\n\r\n    isSiliconFlow,\r\n    siliconFlowUrl: process.env.SILICONFLOW_URL,\r\n    siliconFlowApiKey: getApiKey(process.env.SILICONFLOW_API_KEY),\r\n\r\n    gtmId: process.env.GTM_ID,\r\n    gaId: process.env.GA_ID || DEFAULT_GA_ID,\r\n\r\n    needCode: ACCESS_CODES.size > 0,\r\n    code: process.env.CODE,\r\n    codes: ACCESS_CODES,\r\n\r\n    proxyUrl: process.env.PROXY_URL,\r\n    isVercel: !!process.env.VERCEL,\r\n\r\n    hideUserApiKey: !!process.env.HIDE_USER_API_KEY,\r\n    disableGPT4,\r\n    hideBalanceQuery: !process.env.ENABLE_BALANCE_QUERY,\r\n    disableFastLink: !!process.env.DISABLE_FAST_LINK,\r\n    customModels,\r\n    defaultModel,\r\n    visionModels,\r\n    allowedWebDavEndpoints,\r\n    enableMcp: process.env.ENABLE_MCP === \"true\",\r\n  };\r\n};\r\n","export const OWNER = \"ChatGPTNextWeb\";\r\nexport const REPO = \"ChatGPT-Next-Web\";\r\nexport const REPO_URL = `https://github.com/${OWNER}/${REPO}`;\r\nexport const PLUGINS_REPO_URL = `https://github.com/${OWNER}/NextChat-Awesome-Plugins`;\r\nexport const ISSUE_URL = `https://github.com/${OWNER}/${REPO}/issues`;\r\nexport const UPDATE_URL = `${REPO_URL}#keep-updated`;\r\nexport const RELEASE_URL = `${REPO_URL}/releases`;\r\nexport const FETCH_COMMIT_URL = `https://api.github.com/repos/${OWNER}/${REPO}/commits?per_page=1`;\r\nexport const FETCH_TAG_URL = `https://api.github.com/repos/${OWNER}/${REPO}/tags?per_page=1`;\r\nexport const RUNTIME_CONFIG_DOM = \"danger-runtime-config\";\r\n\r\nexport const STABILITY_BASE_URL = \"https://api.stability.ai\";\r\n\r\nexport const OPENAI_BASE_URL = \"https://api.openai.com\";\r\nexport const ANTHROPIC_BASE_URL = \"https://api.anthropic.com\";\r\n\r\nexport const GEMINI_BASE_URL = \"https://generativelanguage.googleapis.com/\";\r\n\r\nexport const BAIDU_BASE_URL = \"https://aip.baidubce.com\";\r\nexport const BAIDU_OATUH_URL = `${BAIDU_BASE_URL}/oauth/2.0/token`;\r\n\r\nexport const BYTEDANCE_BASE_URL = \"https://ark.cn-beijing.volces.com\";\r\n\r\nexport const ALIBABA_BASE_URL = \"https://dashscope.aliyuncs.com/api/\";\r\n\r\nexport const TENCENT_BASE_URL = \"https://hunyuan.tencentcloudapi.com\";\r\n\r\nexport const MOONSHOT_BASE_URL = \"https://api.moonshot.cn\";\r\nexport const IFLYTEK_BASE_URL = \"https://spark-api-open.xf-yun.com\";\r\n\r\nexport const DEEPSEEK_BASE_URL = \"https://api.deepseek.com\";\r\n\r\nexport const XAI_BASE_URL = \"https://api.x.ai\";\r\n\r\nexport const CHATGLM_BASE_URL = \"https://open.bigmodel.cn\";\r\n\r\nexport const SILICONFLOW_BASE_URL = \"https://api.siliconflow.cn\";\r\n\r\nexport const CACHE_URL_PREFIX = \"/api/cache\";\r\nexport const UPLOAD_URL = `${CACHE_URL_PREFIX}/upload`;\r\n\r\nexport enum Path {\r\n  Home = \"/\",\r\n  Chat = \"/chat\",\r\n  Settings = \"/settings\",\r\n  NewChat = \"/new-chat\",\r\n  Masks = \"/masks\",\r\n  Plugins = \"/plugins\",\r\n  Auth = \"/auth\",\r\n  Sd = \"/sd\",\r\n  SdNew = \"/sd-new\",\r\n  Artifacts = \"/artifacts\",\r\n  SearchChat = \"/search-chat\",\r\n  McpMarket = \"/mcp-market\",\r\n}\r\n\r\nexport enum ApiPath {\r\n  Cors = \"\",\r\n  Azure = \"/api/azure\",\r\n  OpenAI = \"/api/openai\",\r\n  Anthropic = \"/api/anthropic\",\r\n  Google = \"/api/google\",\r\n  Baidu = \"/api/baidu\",\r\n  ByteDance = \"/api/bytedance\",\r\n  Alibaba = \"/api/alibaba\",\r\n  Tencent = \"/api/tencent\",\r\n  Moonshot = \"/api/moonshot\",\r\n  Iflytek = \"/api/iflytek\",\r\n  Stability = \"/api/stability\",\r\n  Artifacts = \"/api/artifacts\",\r\n  XAI = \"/api/xai\",\r\n  ChatGLM = \"/api/chatglm\",\r\n  DeepSeek = \"/api/deepseek\",\r\n  SiliconFlow = \"/api/siliconflow\",\r\n}\r\n\r\nexport enum SlotID {\r\n  AppBody = \"app-body\",\r\n  CustomModel = \"custom-model\",\r\n}\r\n\r\nexport enum FileName {\r\n  Masks = \"masks.json\",\r\n  Prompts = \"prompts.json\",\r\n}\r\n\r\nexport enum StoreKey {\r\n  Chat = \"chat-next-web-store\",\r\n  Plugin = \"chat-next-web-plugin\",\r\n  Access = \"access-control\",\r\n  Config = \"app-config\",\r\n  Mask = \"mask-store\",\r\n  Prompt = \"prompt-store\",\r\n  Update = \"chat-update\",\r\n  Sync = \"sync\",\r\n  SdList = \"sd-list\",\r\n  Mcp = \"mcp-store\",\r\n}\r\n\r\nexport const DEFAULT_SIDEBAR_WIDTH = 300;\r\nexport const MAX_SIDEBAR_WIDTH = 500;\r\nexport const MIN_SIDEBAR_WIDTH = 230;\r\nexport const NARROW_SIDEBAR_WIDTH = 100;\r\n\r\nexport const ACCESS_CODE_PREFIX = \"nk-\";\r\n\r\nexport const LAST_INPUT_KEY = \"last-input\";\r\nexport const UNFINISHED_INPUT = (id: string) => \"unfinished-input-\" + id;\r\n\r\nexport const STORAGE_KEY = \"chatgpt-next-web\";\r\n\r\nexport const REQUEST_TIMEOUT_MS = 60000;\r\nexport const REQUEST_TIMEOUT_MS_FOR_THINKING = REQUEST_TIMEOUT_MS * 5;\r\n\r\nexport const EXPORT_MESSAGE_CLASS_NAME = \"export-markdown\";\r\n\r\nexport enum ServiceProvider {\r\n  OpenAI = \"OpenAI\",\r\n  Azure = \"Azure\",\r\n  Google = \"Google\",\r\n  Anthropic = \"Anthropic\",\r\n  Baidu = \"Baidu\",\r\n  ByteDance = \"ByteDance\",\r\n  Alibaba = \"Alibaba\",\r\n  Tencent = \"Tencent\",\r\n  Moonshot = \"Moonshot\",\r\n  Stability = \"Stability\",\r\n  Iflytek = \"Iflytek\",\r\n  XAI = \"XAI\",\r\n  ChatGLM = \"ChatGLM\",\r\n  DeepSeek = \"DeepSeek\",\r\n  SiliconFlow = \"SiliconFlow\",\r\n}\r\n\r\n// Google API safety settings, see https://ai.google.dev/gemini-api/docs/safety-settings\r\n// BLOCK_NONE will not block any content, and BLOCK_ONLY_HIGH will block only high-risk content.\r\nexport enum GoogleSafetySettingsThreshold {\r\n  BLOCK_NONE = \"BLOCK_NONE\",\r\n  BLOCK_ONLY_HIGH = \"BLOCK_ONLY_HIGH\",\r\n  BLOCK_MEDIUM_AND_ABOVE = \"BLOCK_MEDIUM_AND_ABOVE\",\r\n  BLOCK_LOW_AND_ABOVE = \"BLOCK_LOW_AND_ABOVE\",\r\n}\r\n\r\nexport enum ModelProvider {\r\n  Stability = \"Stability\",\r\n  GPT = \"GPT\",\r\n  GeminiPro = \"GeminiPro\",\r\n  Claude = \"Claude\",\r\n  Ernie = \"Ernie\",\r\n  Doubao = \"Doubao\",\r\n  Qwen = \"Qwen\",\r\n  Hunyuan = \"Hunyuan\",\r\n  Moonshot = \"Moonshot\",\r\n  Iflytek = \"Iflytek\",\r\n  XAI = \"XAI\",\r\n  ChatGLM = \"ChatGLM\",\r\n  DeepSeek = \"DeepSeek\",\r\n  SiliconFlow = \"SiliconFlow\",\r\n}\r\n\r\nexport const Stability = {\r\n  GeneratePath: \"v2beta/stable-image/generate\",\r\n  ExampleEndpoint: \"https://api.stability.ai\",\r\n};\r\n\r\nexport const Anthropic = {\r\n  ChatPath: \"v1/messages\",\r\n  ChatPath1: \"v1/complete\",\r\n  ExampleEndpoint: \"https://api.anthropic.com\",\r\n  Vision: \"2023-06-01\",\r\n};\r\n\r\nexport const OpenaiPath = {\r\n  ChatPath: \"v1/chat/completions\",\r\n  SpeechPath: \"v1/audio/speech\",\r\n  ImagePath: \"v1/images/generations\",\r\n  UsagePath: \"dashboard/billing/usage\",\r\n  SubsPath: \"dashboard/billing/subscription\",\r\n  ListModelPath: \"v1/models\",\r\n};\r\n\r\nexport const Azure = {\r\n  ChatPath: (deployName: string, apiVersion: string) =>\r\n    `deployments/${deployName}/chat/completions?api-version=${apiVersion}`,\r\n  // https://<your_resource_name>.openai.azure.com/openai/deployments/<your_deployment_name>/images/generations?api-version=<api_version>\r\n  ImagePath: (deployName: string, apiVersion: string) =>\r\n    `deployments/${deployName}/images/generations?api-version=${apiVersion}`,\r\n  ExampleEndpoint: \"https://{resource-url}/openai\",\r\n};\r\n\r\nexport const Google = {\r\n  ExampleEndpoint: \"https://generativelanguage.googleapis.com/\",\r\n  ChatPath: (modelName: string) =>\r\n    `v1beta/models/${modelName}:streamGenerateContent`,\r\n};\r\n\r\nexport const Baidu = {\r\n  ExampleEndpoint: BAIDU_BASE_URL,\r\n  ChatPath: (modelName: string) => {\r\n    let endpoint = modelName;\r\n    if (modelName === \"ernie-4.0-8k\") {\r\n      endpoint = \"completions_pro\";\r\n    }\r\n    if (modelName === \"ernie-4.0-8k-preview-0518\") {\r\n      endpoint = \"completions_adv_pro\";\r\n    }\r\n    if (modelName === \"ernie-3.5-8k\") {\r\n      endpoint = \"completions\";\r\n    }\r\n    if (modelName === \"ernie-speed-8k\") {\r\n      endpoint = \"ernie_speed\";\r\n    }\r\n    return `rpc/2.0/ai_custom/v1/wenxinworkshop/chat/${endpoint}`;\r\n  },\r\n};\r\n\r\nexport const ByteDance = {\r\n  ExampleEndpoint: \"https://ark.cn-beijing.volces.com/api/\",\r\n  ChatPath: \"api/v3/chat/completions\",\r\n};\r\n\r\nexport const Alibaba = {\r\n  ExampleEndpoint: ALIBABA_BASE_URL,\r\n  ChatPath: \"v1/services/aigc/text-generation/generation\",\r\n};\r\n\r\nexport const Tencent = {\r\n  ExampleEndpoint: TENCENT_BASE_URL,\r\n};\r\n\r\nexport const Moonshot = {\r\n  ExampleEndpoint: MOONSHOT_BASE_URL,\r\n  ChatPath: \"v1/chat/completions\",\r\n};\r\n\r\nexport const Iflytek = {\r\n  ExampleEndpoint: IFLYTEK_BASE_URL,\r\n  ChatPath: \"v1/chat/completions\",\r\n};\r\n\r\nexport const DeepSeek = {\r\n  ExampleEndpoint: DEEPSEEK_BASE_URL,\r\n  ChatPath: \"chat/completions\",\r\n};\r\n\r\nexport const XAI = {\r\n  ExampleEndpoint: XAI_BASE_URL,\r\n  ChatPath: \"v1/chat/completions\",\r\n};\r\n\r\nexport const ChatGLM = {\r\n  ExampleEndpoint: CHATGLM_BASE_URL,\r\n  ChatPath: \"api/paas/v4/chat/completions\",\r\n  ImagePath: \"api/paas/v4/images/generations\",\r\n  VideoPath: \"api/paas/v4/videos/generations\",\r\n};\r\n\r\nexport const SiliconFlow = {\r\n  ExampleEndpoint: SILICONFLOW_BASE_URL,\r\n  ChatPath: \"v1/chat/completions\",\r\n  ListModelPath: \"v1/models?&sub_type=chat\",\r\n};\r\n\r\nexport const DEFAULT_INPUT_TEMPLATE = `{{input}}`; // input / time / model / lang\r\n// export const DEFAULT_SYSTEM_TEMPLATE = `\r\n// You are ChatGPT, a large language model trained by {{ServiceProvider}}.\r\n// Knowledge cutoff: {{cutoff}}\r\n// Current model: {{model}}\r\n// Current time: {{time}}\r\n// Latex inline: $x^2$\r\n// Latex block: $$e=mc^2$$\r\n// `;\r\nexport const DEFAULT_SYSTEM_TEMPLATE = `\r\nYou are ChatGPT, a large language model trained by {{ServiceProvider}}.\r\nKnowledge cutoff: {{cutoff}}\r\nCurrent model: {{model}}\r\nCurrent time: {{time}}\r\nLatex inline: \\\\(x^2\\\\) \r\nLatex block: $$e=mc^2$$\r\n`;\r\n\r\nexport const MCP_TOOLS_TEMPLATE = `\r\n[clientId]\r\n{{ clientId }}\r\n[tools]\r\n{{ tools }}\r\n`;\r\n\r\nexport const MCP_SYSTEM_TEMPLATE = `\r\nYou are an AI assistant with access to system tools. Your role is to help users by combining natural language understanding with tool operations when needed.\r\n\r\n1. AVAILABLE TOOLS:\r\n{{ MCP_TOOLS }}\r\n\r\n2. WHEN TO USE TOOLS:\r\n   - ALWAYS USE TOOLS when they can help answer user questions\r\n   - DO NOT just describe what you could do - TAKE ACTION immediately\r\n   - If you're not sure whether to use a tool, USE IT\r\n   - Common triggers for tool use:\r\n     * Questions about files or directories\r\n     * Requests to check, list, or manipulate system resources\r\n     * Any query that can be answered with available tools\r\n\r\n3. HOW TO USE TOOLS:\r\n   A. Tool Call Format:\r\n      - Use markdown code blocks with format: \\`\\`\\`json:mcp:{clientId}\\`\\`\\`\r\n      - Always include:\r\n        * method: \"tools/call\"（Only this method is supported）\r\n        * params: \r\n          - name: must match an available primitive name\r\n          - arguments: required parameters for the primitive\r\n\r\n   B. Response Format:\r\n      - Tool responses will come as user messages\r\n      - Format: \\`\\`\\`json:mcp-response:{clientId}\\`\\`\\`\r\n      - Wait for response before making another tool call\r\n\r\n   C. Important Rules:\r\n      - Only use tools/call method\r\n      - Only ONE tool call per message\r\n      - ALWAYS TAKE ACTION instead of just describing what you could do\r\n      - Include the correct clientId in code block language tag\r\n      - Verify arguments match the primitive's requirements\r\n\r\n4. INTERACTION FLOW:\r\n   A. When user makes a request:\r\n      - IMMEDIATELY use appropriate tool if available\r\n      - DO NOT ask if user wants you to use the tool\r\n      - DO NOT just describe what you could do\r\n   B. After receiving tool response:\r\n      - Explain results clearly\r\n      - Take next appropriate action if needed\r\n   C. If tools fail:\r\n      - Explain the error\r\n      - Try alternative approach immediately\r\n\r\n5. EXAMPLE INTERACTION:\r\n\r\n  good example:\r\n\r\n   \\`\\`\\`json:mcp:filesystem\r\n   {\r\n     \"method\": \"tools/call\",\r\n     \"params\": {\r\n       \"name\": \"list_allowed_directories\",\r\n       \"arguments\": {}\r\n     }\r\n   }\r\n   \\`\\`\\`\"\r\n\r\n\r\n  \\`\\`\\`json:mcp-response:filesystem\r\n  {\r\n  \"method\": \"tools/call\",\r\n  \"params\": {\r\n    \"name\": \"write_file\",\r\n    \"arguments\": {\r\n      \"path\": \"/Users/river/dev/nextchat/test/joke.txt\",\r\n      \"content\": \"为什么数学书总是感到忧伤？因为它有太多的问题。\"\r\n    }\r\n  }\r\n  }\r\n\\`\\`\\`\r\n\r\n   follwing is the wrong! mcp json example:\r\n\r\n   \\`\\`\\`json:mcp:filesystem\r\n   {\r\n      \"method\": \"write_file\",\r\n      \"params\": {\r\n        \"path\": \"NextChat_Information.txt\",\r\n        \"content\": \"1\"\r\n    }\r\n   }\r\n   \\`\\`\\`\r\n\r\n   This is wrong because the method is not tools/call.\r\n   \r\n   \\`\\`\\`{\r\n  \"method\": \"search_repositories\",\r\n  \"params\": {\r\n    \"query\": \"2oeee\"\r\n  }\r\n}\r\n   \\`\\`\\`\r\n\r\n   This is wrong because the method is not tools/call.!!!!!!!!!!!\r\n\r\n   the right format is:\r\n   \\`\\`\\`json:mcp:filesystem\r\n   {\r\n     \"method\": \"tools/call\",\r\n     \"params\": {\r\n       \"name\": \"search_repositories\",\r\n       \"arguments\": {\r\n         \"query\": \"2oeee\"\r\n       }\r\n     }\r\n   }\r\n   \\`\\`\\`\r\n   \r\n   please follow the format strictly ONLY use tools/call method!!!!!!!!!!!\r\n   \r\n`;\r\n\r\nexport const SUMMARIZE_MODEL = \"gpt-4o-mini\";\r\nexport const GEMINI_SUMMARIZE_MODEL = \"gemini-pro\";\r\nexport const DEEPSEEK_SUMMARIZE_MODEL = \"deepseek-chat\";\r\n\r\nexport const KnowledgeCutOffDate: Record<string, string> = {\r\n  default: \"2021-09\",\r\n  \"gpt-4-turbo\": \"2023-12\",\r\n  \"gpt-4-turbo-2024-04-09\": \"2023-12\",\r\n  \"gpt-4-turbo-preview\": \"2023-12\",\r\n  \"gpt-4o\": \"2023-10\",\r\n  \"gpt-4o-2024-05-13\": \"2023-10\",\r\n  \"gpt-4o-2024-08-06\": \"2023-10\",\r\n  \"gpt-4o-2024-11-20\": \"2023-10\",\r\n  \"chatgpt-4o-latest\": \"2023-10\",\r\n  \"gpt-4o-mini\": \"2023-10\",\r\n  \"gpt-4o-mini-2024-07-18\": \"2023-10\",\r\n  \"gpt-4-vision-preview\": \"2023-04\",\r\n  \"o1-mini-2024-09-12\": \"2023-10\",\r\n  \"o1-mini\": \"2023-10\",\r\n  \"o1-preview-2024-09-12\": \"2023-10\",\r\n  \"o1-preview\": \"2023-10\",\r\n  \"o1-2024-12-17\": \"2023-10\",\r\n  o1: \"2023-10\",\r\n  \"o3-mini-2025-01-31\": \"2023-10\",\r\n  \"o3-mini\": \"2023-10\",\r\n  // After improvements,\r\n  // it's now easier to add \"KnowledgeCutOffDate\" instead of stupid hardcoding it, as was done previously.\r\n  \"gemini-pro\": \"2023-12\",\r\n  \"gemini-pro-vision\": \"2023-12\",\r\n  \"deepseek-chat\": \"2024-07\",\r\n  \"deepseek-coder\": \"2024-07\",\r\n};\r\n\r\nexport const DEFAULT_TTS_ENGINE = \"OpenAI-TTS\";\r\nexport const DEFAULT_TTS_ENGINES = [\"OpenAI-TTS\", \"Edge-TTS\"];\r\nexport const DEFAULT_TTS_MODEL = \"tts-1\";\r\nexport const DEFAULT_TTS_VOICE = \"alloy\";\r\nexport const DEFAULT_TTS_MODELS = [\"tts-1\", \"tts-1-hd\"];\r\nexport const DEFAULT_TTS_VOICES = [\r\n  \"alloy\",\r\n  \"echo\",\r\n  \"fable\",\r\n  \"onyx\",\r\n  \"nova\",\r\n  \"shimmer\",\r\n];\r\n\r\nexport const VISION_MODEL_REGEXES = [\r\n  /vision/,\r\n  /gpt-4o/,\r\n  /claude-3/,\r\n  /gemini-1\\.5/,\r\n  /gemini-exp/,\r\n  /gemini-2\\.0/,\r\n  /learnlm/,\r\n  /qwen-vl/,\r\n  /qwen2-vl/,\r\n  /gpt-4-turbo(?!.*preview)/, // Matches \"gpt-4-turbo\" but not \"gpt-4-turbo-preview\"\r\n  /^dall-e-3$/, // Matches exactly \"dall-e-3\"\r\n  /glm-4v/,\r\n  /vl/i,\r\n];\r\n\r\nexport const EXCLUDE_VISION_MODEL_REGEXES = [/claude-3-5-haiku-20241022/];\r\n\r\nconst openaiModels = [\r\n  // As of July 2024, gpt-4o-mini should be used in place of gpt-3.5-turbo,\r\n  // as it is cheaper, more capable, multimodal, and just as fast. gpt-3.5-turbo is still available for use in the API.\r\n  \"gpt-3.5-turbo\",\r\n  \"gpt-3.5-turbo-1106\",\r\n  \"gpt-3.5-turbo-0125\",\r\n  \"gpt-4\",\r\n  \"gpt-4-0613\",\r\n  \"gpt-4-32k\",\r\n  \"gpt-4-32k-0613\",\r\n  \"gpt-4-turbo\",\r\n  \"gpt-4-turbo-preview\",\r\n  \"gpt-4o\",\r\n  \"gpt-4o-2024-05-13\",\r\n  \"gpt-4o-2024-08-06\",\r\n  \"gpt-4o-2024-11-20\",\r\n  \"chatgpt-4o-latest\",\r\n  \"gpt-4o-mini\",\r\n  \"gpt-4o-mini-2024-07-18\",\r\n  \"gpt-4-vision-preview\",\r\n  \"gpt-4-turbo-2024-04-09\",\r\n  \"gpt-4-1106-preview\",\r\n  \"dall-e-3\",\r\n  \"o1-mini\",\r\n  \"o1-preview\",\r\n  \"o3-mini\",\r\n];\r\n\r\nconst googleModels = [\r\n  \"gemini-1.0-pro\", // Deprecated on 2/15/2025\r\n  \"gemini-1.5-pro-latest\",\r\n  \"gemini-1.5-pro\",\r\n  \"gemini-1.5-pro-002\",\r\n  \"gemini-1.5-pro-exp-0827\",\r\n  \"gemini-1.5-flash-latest\",\r\n  \"gemini-1.5-flash-8b-latest\",\r\n  \"gemini-1.5-flash\",\r\n  \"gemini-1.5-flash-8b\",\r\n  \"gemini-1.5-flash-002\",\r\n  \"gemini-1.5-flash-exp-0827\",\r\n  \"learnlm-1.5-pro-experimental\",\r\n  \"gemini-exp-1114\",\r\n  \"gemini-exp-1121\",\r\n  \"gemini-exp-1206\",\r\n  \"gemini-2.0-flash\",\r\n  \"gemini-2.0-flash-exp\",\r\n  \"gemini-2.0-flash-lite-preview-02-05\",\r\n  \"gemini-2.0-flash-thinking-exp\",\r\n  \"gemini-2.0-flash-thinking-exp-1219\",\r\n  \"gemini-2.0-flash-thinking-exp-01-21\",\r\n  \"gemini-2.0-pro-exp\",\r\n  \"gemini-2.0-pro-exp-02-05\",\r\n];\r\n\r\nconst anthropicModels = [\r\n  \"claude-instant-1.2\",\r\n  \"claude-2.0\",\r\n  \"claude-2.1\",\r\n  \"claude-3-sonnet-20240229\",\r\n  \"claude-3-opus-20240229\",\r\n  \"claude-3-opus-latest\",\r\n  \"claude-3-haiku-20240307\",\r\n  \"claude-3-5-haiku-20241022\",\r\n  \"claude-3-5-haiku-latest\",\r\n  \"claude-3-5-sonnet-20240620\",\r\n  \"claude-3-5-sonnet-20241022\",\r\n  \"claude-3-5-sonnet-latest\",\r\n  \"claude-3-7-sonnet-20250219\",\r\n  \"claude-3-7-sonnet-latest\",\r\n];\r\n\r\nconst baiduModels = [\r\n  \"ernie-4.0-turbo-8k\",\r\n  \"ernie-4.0-8k\",\r\n  \"ernie-4.0-8k-preview\",\r\n  \"ernie-4.0-8k-preview-0518\",\r\n  \"ernie-4.0-8k-latest\",\r\n  \"ernie-3.5-8k\",\r\n  \"ernie-3.5-8k-0205\",\r\n  \"ernie-speed-128k\",\r\n  \"ernie-speed-8k\",\r\n  \"ernie-lite-8k\",\r\n  \"ernie-tiny-8k\",\r\n];\r\n\r\nconst bytedanceModels = [\r\n  \"Doubao-lite-4k\",\r\n  \"Doubao-lite-32k\",\r\n  \"Doubao-lite-128k\",\r\n  \"Doubao-pro-4k\",\r\n  \"Doubao-pro-32k\",\r\n  \"Doubao-pro-128k\",\r\n];\r\n\r\nconst alibabaModes = [\r\n  \"qwen-turbo\",\r\n  \"qwen-plus\",\r\n  \"qwen-max\",\r\n  \"qwen-max-0428\",\r\n  \"qwen-max-0403\",\r\n  \"qwen-max-0107\",\r\n  \"qwen-max-longcontext\",\r\n];\r\n\r\nconst tencentModels = [\r\n  \"hunyuan-pro\",\r\n  \"hunyuan-standard\",\r\n  \"hunyuan-lite\",\r\n  \"hunyuan-role\",\r\n  \"hunyuan-functioncall\",\r\n  \"hunyuan-code\",\r\n  \"hunyuan-vision\",\r\n];\r\n\r\nconst moonshotModes = [\"moonshot-v1-8k\", \"moonshot-v1-32k\", \"moonshot-v1-128k\"];\r\n\r\nconst iflytekModels = [\r\n  \"general\",\r\n  \"generalv3\",\r\n  \"pro-128k\",\r\n  \"generalv3.5\",\r\n  \"4.0Ultra\",\r\n];\r\n\r\nconst deepseekModels = [\"deepseek-chat\", \"deepseek-coder\", \"deepseek-reasoner\"];\r\n\r\nconst xAIModes = [\r\n  \"grok-beta\",\r\n  \"grok-2\",\r\n  \"grok-2-1212\",\r\n  \"grok-2-latest\",\r\n  \"grok-vision-beta\",\r\n  \"grok-2-vision-1212\",\r\n  \"grok-2-vision\",\r\n  \"grok-2-vision-latest\",\r\n];\r\n\r\nconst chatglmModels = [\r\n  \"glm-4-plus\",\r\n  \"glm-4-0520\",\r\n  \"glm-4\",\r\n  \"glm-4-air\",\r\n  \"glm-4-airx\",\r\n  \"glm-4-long\",\r\n  \"glm-4-flashx\",\r\n  \"glm-4-flash\",\r\n  \"glm-4v-plus\",\r\n  \"glm-4v\",\r\n  \"glm-4v-flash\", // free\r\n  \"cogview-3-plus\",\r\n  \"cogview-3\",\r\n  \"cogview-3-flash\", // free\r\n  // 目前无法适配轮询任务\r\n  //   \"cogvideox\",\r\n  //   \"cogvideox-flash\", // free\r\n];\r\n\r\nconst siliconflowModels = [\r\n  \"Qwen/Qwen2.5-7B-Instruct\",\r\n  \"Qwen/Qwen2.5-72B-Instruct\",\r\n  \"deepseek-ai/DeepSeek-R1\",\r\n  \"deepseek-ai/DeepSeek-R1-Distill-Llama-70B\",\r\n  \"deepseek-ai/DeepSeek-R1-Distill-Llama-8B\",\r\n  \"deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B\",\r\n  \"deepseek-ai/DeepSeek-R1-Distill-Qwen-14B\",\r\n  \"deepseek-ai/DeepSeek-R1-Distill-Qwen-32B\",\r\n  \"deepseek-ai/DeepSeek-R1-Distill-Qwen-7B\",\r\n  \"deepseek-ai/DeepSeek-V3\",\r\n  \"meta-llama/Llama-3.3-70B-Instruct\",\r\n  \"THUDM/glm-4-9b-chat\",\r\n  \"Pro/deepseek-ai/DeepSeek-R1\",\r\n  \"Pro/deepseek-ai/DeepSeek-V3\",\r\n];\r\n\r\nlet seq = 1000; // 内置的模型序号生成器从1000开始\r\nexport const DEFAULT_MODELS = [\r\n  ...openaiModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++, // Global sequence sort(index)\r\n    provider: {\r\n      id: \"openai\",\r\n      providerName: \"OpenAI\",\r\n      providerType: \"openai\",\r\n      sorted: 1, // 这里是固定的，确保顺序与之前内置的版本一致\r\n    },\r\n  })),\r\n  ...openaiModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"azure\",\r\n      providerName: \"Azure\",\r\n      providerType: \"azure\",\r\n      sorted: 2,\r\n    },\r\n  })),\r\n  ...googleModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"google\",\r\n      providerName: \"Google\",\r\n      providerType: \"google\",\r\n      sorted: 3,\r\n    },\r\n  })),\r\n  ...anthropicModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"anthropic\",\r\n      providerName: \"Anthropic\",\r\n      providerType: \"anthropic\",\r\n      sorted: 4,\r\n    },\r\n  })),\r\n  ...baiduModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"baidu\",\r\n      providerName: \"Baidu\",\r\n      providerType: \"baidu\",\r\n      sorted: 5,\r\n    },\r\n  })),\r\n  ...bytedanceModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"bytedance\",\r\n      providerName: \"ByteDance\",\r\n      providerType: \"bytedance\",\r\n      sorted: 6,\r\n    },\r\n  })),\r\n  ...alibabaModes.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"alibaba\",\r\n      providerName: \"Alibaba\",\r\n      providerType: \"alibaba\",\r\n      sorted: 7,\r\n    },\r\n  })),\r\n  ...tencentModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"tencent\",\r\n      providerName: \"Tencent\",\r\n      providerType: \"tencent\",\r\n      sorted: 8,\r\n    },\r\n  })),\r\n  ...moonshotModes.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"moonshot\",\r\n      providerName: \"Moonshot\",\r\n      providerType: \"moonshot\",\r\n      sorted: 9,\r\n    },\r\n  })),\r\n  ...iflytekModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"iflytek\",\r\n      providerName: \"Iflytek\",\r\n      providerType: \"iflytek\",\r\n      sorted: 10,\r\n    },\r\n  })),\r\n  ...xAIModes.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"xai\",\r\n      providerName: \"XAI\",\r\n      providerType: \"xai\",\r\n      sorted: 11,\r\n    },\r\n  })),\r\n  ...chatglmModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"chatglm\",\r\n      providerName: \"ChatGLM\",\r\n      providerType: \"chatglm\",\r\n      sorted: 12,\r\n    },\r\n  })),\r\n  ...deepseekModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"deepseek\",\r\n      providerName: \"DeepSeek\",\r\n      providerType: \"deepseek\",\r\n      sorted: 13,\r\n    },\r\n  })),\r\n  ...siliconflowModels.map((name) => ({\r\n    name,\r\n    available: true,\r\n    sorted: seq++,\r\n    provider: {\r\n      id: \"siliconflow\",\r\n      providerName: \"SiliconFlow\",\r\n      providerType: \"siliconflow\",\r\n      sorted: 14,\r\n    },\r\n  })),\r\n] as const;\r\n\r\nexport const CHAT_PAGE_SIZE = 15;\r\nexport const MAX_RENDER_MSG_COUNT = 45;\r\n\r\n// some famous webdav endpoints\r\nexport const internalAllowedWebDavEndpoints = [\r\n  \"https://dav.jianguoyun.com/dav/\",\r\n  \"https://dav.dropdav.com/\",\r\n  \"https://dav.box.com/dav\",\r\n  \"https://nanao.teracloud.jp/dav/\",\r\n  \"https://bora.teracloud.jp/dav/\",\r\n  \"https://webdav.4shared.com/\",\r\n  \"https://dav.idrivesync.com\",\r\n  \"https://webdav.yandex.com\",\r\n  \"https://app.koofr.net/dav/Koofr\",\r\n];\r\n\r\nexport const DEFAULT_GA_ID = \"G-89WN60ZK2E\";\r\n\r\nexport const SAAS_CHAT_URL = \"https://nextchat.club\";\r\nexport const SAAS_CHAT_UTM_URL = \"https://nextchat.club?utm=github\";\r\n","import { DEFAULT_MODELS, ServiceProvider } from \"../constant\";\r\nimport { LLMModel } from \"../client/api\";\r\n\r\nconst CustomSeq = {\r\n  val: -1000, //To ensure the custom model located at front, start from -1000, refer to constant.ts\r\n  cache: new Map<string, number>(),\r\n  next: (id: string) => {\r\n    if (CustomSeq.cache.has(id)) {\r\n      return CustomSeq.cache.get(id) as number;\r\n    } else {\r\n      let seq = CustomSeq.val++;\r\n      CustomSeq.cache.set(id, seq);\r\n      return seq;\r\n    }\r\n  },\r\n};\r\n\r\nconst customProvider = (providerName: string) => ({\r\n  id: providerName.toLowerCase(),\r\n  providerName: providerName,\r\n  providerType: \"custom\",\r\n  sorted: CustomSeq.next(providerName),\r\n});\r\n\r\n/**\r\n * Sorts an array of models based on specified rules.\r\n *\r\n * First, sorted by provider; if the same, sorted by model\r\n */\r\nconst sortModelTable = (models: ReturnType<typeof collectModels>) =>\r\n  models.sort((a, b) => {\r\n    if (a.provider && b.provider) {\r\n      let cmp = a.provider.sorted - b.provider.sorted;\r\n      return cmp === 0 ? a.sorted - b.sorted : cmp;\r\n    } else {\r\n      return a.sorted - b.sorted;\r\n    }\r\n  });\r\n\r\n/**\r\n * get model name and provider from a formatted string,\r\n * e.g. `gpt-4@OpenAi` or `claude-3-5-sonnet@20240620@Google`\r\n * @param modelWithProvider model name with provider separated by last `@` char,\r\n * @returns [model, provider] tuple, if no `@` char found, provider is undefined\r\n */\r\nexport function getModelProvider(modelWithProvider: string): [string, string?] {\r\n  const [model, provider] = modelWithProvider.split(/@(?!.*@)/);\r\n  return [model, provider];\r\n}\r\n\r\nexport function collectModelTable(\r\n  models: readonly LLMModel[],\r\n  customModels: string,\r\n) {\r\n  const modelTable: Record<\r\n    string,\r\n    {\r\n      available: boolean;\r\n      name: string;\r\n      displayName: string;\r\n      sorted: number;\r\n      provider?: LLMModel[\"provider\"]; // Marked as optional\r\n      isDefault?: boolean;\r\n    }\r\n  > = {};\r\n\r\n  // default models\r\n  models.forEach((m) => {\r\n    // using <modelName>@<providerId> as fullName\r\n    modelTable[`${m.name}@${m?.provider?.id}`] = {\r\n      ...m,\r\n      displayName: m.name, // 'provider' is copied over if it exists\r\n    };\r\n  });\r\n\r\n  // server custom models\r\n  customModels\r\n    .split(\",\")\r\n    .filter((v) => !!v && v.length > 0)\r\n    .forEach((m) => {\r\n      const available = !m.startsWith(\"-\");\r\n      const nameConfig =\r\n        m.startsWith(\"+\") || m.startsWith(\"-\") ? m.slice(1) : m;\r\n      let [name, displayName] = nameConfig.split(\"=\");\r\n\r\n      // enable or disable all models\r\n      if (name === \"all\") {\r\n        Object.values(modelTable).forEach(\r\n          (model) => (model.available = available),\r\n        );\r\n      } else {\r\n        // 1. find model by name, and set available value\r\n        const [customModelName, customProviderName] = getModelProvider(name);\r\n        let count = 0;\r\n        for (const fullName in modelTable) {\r\n          const [modelName, providerName] = getModelProvider(fullName);\r\n          if (\r\n            customModelName == modelName &&\r\n            (customProviderName === undefined ||\r\n              customProviderName === providerName)\r\n          ) {\r\n            count += 1;\r\n            modelTable[fullName][\"available\"] = available;\r\n            // swap name and displayName for bytedance\r\n            if (providerName === \"bytedance\") {\r\n              [name, displayName] = [displayName, modelName];\r\n              modelTable[fullName][\"name\"] = name;\r\n            }\r\n            if (displayName) {\r\n              modelTable[fullName][\"displayName\"] = displayName;\r\n            }\r\n          }\r\n        }\r\n        // 2. if model not exists, create new model with available value\r\n        if (count === 0) {\r\n          let [customModelName, customProviderName] = getModelProvider(name);\r\n          const provider = customProvider(\r\n            customProviderName || customModelName,\r\n          );\r\n          // swap name and displayName for bytedance\r\n          if (displayName && provider.providerName == \"ByteDance\") {\r\n            [customModelName, displayName] = [displayName, customModelName];\r\n          }\r\n          modelTable[`${customModelName}@${provider?.id}`] = {\r\n            name: customModelName,\r\n            displayName: displayName || customModelName,\r\n            available,\r\n            provider, // Use optional chaining\r\n            sorted: CustomSeq.next(`${customModelName}@${provider?.id}`),\r\n          };\r\n        }\r\n      }\r\n    });\r\n\r\n  return modelTable;\r\n}\r\n\r\nexport function collectModelTableWithDefaultModel(\r\n  models: readonly LLMModel[],\r\n  customModels: string,\r\n  defaultModel: string,\r\n) {\r\n  let modelTable = collectModelTable(models, customModels);\r\n  if (defaultModel && defaultModel !== \"\") {\r\n    if (defaultModel.includes(\"@\")) {\r\n      if (defaultModel in modelTable) {\r\n        modelTable[defaultModel].isDefault = true;\r\n      }\r\n    } else {\r\n      for (const key of Object.keys(modelTable)) {\r\n        if (\r\n          modelTable[key].available &&\r\n          getModelProvider(key)[0] == defaultModel\r\n        ) {\r\n          modelTable[key].isDefault = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return modelTable;\r\n}\r\n\r\n/**\r\n * Generate full model table.\r\n */\r\nexport function collectModels(\r\n  models: readonly LLMModel[],\r\n  customModels: string,\r\n) {\r\n  const modelTable = collectModelTable(models, customModels);\r\n  let allModels = Object.values(modelTable);\r\n\r\n  allModels = sortModelTable(allModels);\r\n\r\n  return allModels;\r\n}\r\n\r\nexport function collectModelsWithDefaultModel(\r\n  models: readonly LLMModel[],\r\n  customModels: string,\r\n  defaultModel: string,\r\n) {\r\n  const modelTable = collectModelTableWithDefaultModel(\r\n    models,\r\n    customModels,\r\n    defaultModel,\r\n  );\r\n  let allModels = Object.values(modelTable);\r\n\r\n  allModels = sortModelTable(allModels);\r\n\r\n  return allModels;\r\n}\r\n\r\nexport function isModelAvailableInServer(\r\n  customModels: string,\r\n  modelName: string,\r\n  providerName: string,\r\n) {\r\n  const fullName = `${modelName}@${providerName}`;\r\n  const modelTable = collectModelTable(DEFAULT_MODELS, customModels);\r\n  return modelTable[fullName]?.available === false;\r\n}\r\n\r\n/**\r\n * Check if the model name is a GPT-4 related model\r\n *\r\n * @param modelName The name of the model to check\r\n * @returns True if the model is a GPT-4 related model (excluding gpt-4o-mini)\r\n */\r\nexport function isGPT4Model(modelName: string): boolean {\r\n  return (\r\n    (modelName.startsWith(\"gpt-4\") ||\r\n      modelName.startsWith(\"chatgpt-4o\") ||\r\n      modelName.startsWith(\"o1\")) &&\r\n    !modelName.startsWith(\"gpt-4o-mini\")\r\n  );\r\n}\r\n\r\n/**\r\n * Checks if a model is not available on any of the specified providers in the server.\r\n *\r\n * @param {string} customModels - A string of custom models, comma-separated.\r\n * @param {string} modelName - The name of the model to check.\r\n * @param {string|string[]} providerNames - A string or array of provider names to check against.\r\n *\r\n * @returns {boolean} True if the model is not available on any of the specified providers, false otherwise.\r\n */\r\nexport function isModelNotavailableInServer(\r\n  customModels: string,\r\n  modelName: string,\r\n  providerNames: string | string[],\r\n): boolean {\r\n  // Check DISABLE_GPT4 environment variable\r\n  if (\r\n    process.env.DISABLE_GPT4 === \"1\" &&\r\n    isGPT4Model(modelName.toLowerCase())\r\n  ) {\r\n    return true;\r\n  }\r\n\r\n  const modelTable = collectModelTable(DEFAULT_MODELS, customModels);\r\n\r\n  const providerNamesArray = Array.isArray(providerNames)\r\n    ? providerNames\r\n    : [providerNames];\r\n  for (const providerName of providerNamesArray) {\r\n    // if model provider is bytedance, use model config name to check if not avaliable\r\n    if (providerName === ServiceProvider.ByteDance) {\r\n      return !Object.values(modelTable).filter((v) => v.name === modelName)?.[0]\r\n        ?.available;\r\n    }\r\n    const fullName = `${modelName}@${providerName.toLowerCase()}`;\r\n    if (modelTable?.[fullName]?.available === true) return false;\r\n  }\r\n  return true;\r\n}\r\n"],"names":["md5","DEFAULT_MODELS","DEFAULT_GA_ID","isGPT4Model","ACCESS_CODES","getAccessCodes","code","process","env","CODE","codes","split","filter","v","map","hash","trim","Set","e","getApiKey","keys","apiKeyEnvVar","apiKeys","randomIndex","Math","floor","random","length","apiKey","console","log","getServerSideConfig","Error","disableGPT4","DISABLE_GPT4","customModels","CUSTOM_MODELS","defaultModel","DEFAULT_MODEL","visionModels","VISION_MODELS","m","name","join","isStability","STABILITY_API_KEY","isAzure","AZURE_URL","isGoogle","GOOGLE_API_KEY","isAnthropic","ANTHROPIC_API_KEY","isTencent","TENCENT_API_KEY","isBaidu","BAIDU_API_KEY","isBytedance","BYTEDANCE_API_KEY","isAlibaba","ALIBABA_API_KEY","isMoonshot","MOONSHOT_API_KEY","isIflytek","IFLYTEK_API_KEY","isDeepSeek","DEEPSEEK_API_KEY","isXAI","XAI_API_KEY","isChatGLM","CHATGLM_API_KEY","isSiliconFlow","SILICONFLOW_API_KEY","allowedWebDavEndpoints","WHITE_WEBDAV_ENDPOINTS","baseUrl","BASE_URL","OPENAI_API_KEY","openaiOrgId","OPENAI_ORG_ID","stabilityUrl","STABILITY_URL","stabilityApiKey","azureUrl","azureApiKey","AZURE_API_KEY","azureApiVersion","AZURE_API_VERSION","googleApiKey","googleUrl","GOOGLE_URL","anthropicApiKey","anthropicApiVersion","ANTHROPIC_API_VERSION","anthropicUrl","ANTHROPIC_URL","baiduUrl","BAIDU_URL","baiduApiKey","baiduSecretKey","BAIDU_SECRET_KEY","bytedanceApiKey","bytedanceUrl","BYTEDANCE_URL","alibabaUrl","ALIBABA_URL","alibabaApiKey","tencentUrl","TENCENT_URL","tencentSecretKey","TENCENT_SECRET_KEY","tencentSecretId","TENCENT_SECRET_ID","moonshotUrl","MOONSHOT_URL","moonshotApiKey","iflytekUrl","IFLYTEK_URL","iflytekApiKey","iflytekApiSecret","IFLYTEK_API_SECRET","deepseekUrl","DEEPSEEK_URL","deepseekApiKey","xaiUrl","XAI_URL","xaiApiKey","chatglmUrl","CHATGLM_URL","chatglmApiKey","cloudflareAccountId","CLOUDFLARE_ACCOUNT_ID","cloudflareKVNamespaceId","CLOUDFLARE_KV_NAMESPACE_ID","cloudflareKVApiKey","CLOUDFLARE_KV_API_KEY","cloudflareKVTTL","CLOUDFLARE_KV_TTL","siliconFlowUrl","SILICONFLOW_URL","siliconFlowApiKey","gtmId","GTM_ID","gaId","GA_ID","needCode","size","proxyUrl","PROXY_URL","isVercel","VERCEL","hideUserApiKey","HIDE_USER_API_KEY","hideBalanceQuery","ENABLE_BALANCE_QUERY","disableFastLink","DISABLE_FAST_LINK","enableMcp","ENABLE_MCP","OWNER","REPO","REPO_URL","PLUGINS_REPO_URL","ISSUE_URL","UPDATE_URL","RELEASE_URL","FETCH_COMMIT_URL","FETCH_TAG_URL","RUNTIME_CONFIG_DOM","STABILITY_BASE_URL","OPENAI_BASE_URL","ANTHROPIC_BASE_URL","GEMINI_BASE_URL","BAIDU_BASE_URL","BAIDU_OATUH_URL","BYTEDANCE_BASE_URL","ALIBABA_BASE_URL","TENCENT_BASE_URL","MOONSHOT_BASE_URL","IFLYTEK_BASE_URL","DEEPSEEK_BASE_URL","XAI_BASE_URL","CHATGLM_BASE_URL","SILICONFLOW_BASE_URL","CACHE_URL_PREFIX","UPLOAD_URL","Path","ApiPath","SlotID","FileName","StoreKey","DEFAULT_SIDEBAR_WIDTH","MAX_SIDEBAR_WIDTH","MIN_SIDEBAR_WIDTH","NARROW_SIDEBAR_WIDTH","ACCESS_CODE_PREFIX","LAST_INPUT_KEY","UNFINISHED_INPUT","id","STORAGE_KEY","REQUEST_TIMEOUT_MS","REQUEST_TIMEOUT_MS_FOR_THINKING","EXPORT_MESSAGE_CLASS_NAME","ServiceProvider","GoogleSafetySettingsThreshold","ModelProvider","Stability","GeneratePath","ExampleEndpoint","Anthropic","ChatPath","ChatPath1","Vision","OpenaiPath","SpeechPath","ImagePath","UsagePath","SubsPath","ListModelPath","Azure","deployName","apiVersion","Google","modelName","Baidu","endpoint","ByteDance","Alibaba","Tencent","Moonshot","Iflytek","DeepSeek","XAI","ChatGLM","VideoPath","SiliconFlow","DEFAULT_INPUT_TEMPLATE","DEFAULT_SYSTEM_TEMPLATE","MCP_TOOLS_TEMPLATE","MCP_SYSTEM_TEMPLATE","SUMMARIZE_MODEL","GEMINI_SUMMARIZE_MODEL","DEEPSEEK_SUMMARIZE_MODEL","KnowledgeCutOffDate","default","o1","DEFAULT_TTS_ENGINE","DEFAULT_TTS_ENGINES","DEFAULT_TTS_MODEL","DEFAULT_TTS_VOICE","DEFAULT_TTS_MODELS","DEFAULT_TTS_VOICES","VISION_MODEL_REGEXES","EXCLUDE_VISION_MODEL_REGEXES","openaiModels","googleModels","anthropicModels","baiduModels","bytedanceModels","alibabaModes","tencentModels","moonshotModes","iflytekModels","deepseekModels","xAIModes","chatglmModels","siliconflowModels","seq","available","sorted","provider","providerName","providerType","CHAT_PAGE_SIZE","MAX_RENDER_MSG_COUNT","internalAllowedWebDavEndpoints","SAAS_CHAT_URL","SAAS_CHAT_UTM_URL","CustomSeq","val","cache","Map","next","has","get","set","customProvider","toLowerCase","sortModelTable","models","sort","a","b","cmp","getModelProvider","modelWithProvider","model","collectModelTable","modelTable","forEach","displayName","startsWith","nameConfig","slice","Object","values","customModelName","customProviderName","count","fullName","undefined","collectModelTableWithDefaultModel","includes","isDefault","key","collectModels","allModels","collectModelsWithDefaultModel","isModelAvailableInServer","isModelNotavailableInServer","providerNames","providerNamesArray","Array","isArray"],"sourceRoot":""}