{"version":3,"file":"app/api/upstash/[action]/[...key]/route.js","mappings":"oFAAAA,CAAAA,EAAAC,OAAA,CAAAC,QAAA,0CCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,8aCEA,eAAeC,EACbC,CAAgB,CAChB,CAAEC,OAAAA,CAAM,CAAiD,EAGzD,IAAMC,EAAWC,IADMC,IAAIJ,EAAIK,GAAG,EACNC,YAAY,CAACC,GAAG,CAAC,YAE7C,GAAIP,YAAAA,EAAIQ,MAAM,CACZ,OAAOC,EAAAA,EAAYA,CAACC,IAAI,CAAC,CAAEC,KAAM,IAAK,EAAG,CAAEC,OAAQ,GAAI,GAEzD,GAAM,CAAC,GAAGC,EAAI,CAAGZ,EAAOY,GAAG,CAE3B,GAAI,CAACX,GAAY,CAAC,IAAIE,IAAIF,GAAUY,QAAQ,CAACC,QAAQ,CAAC,eACpD,OAAON,EAAAA,EAAYA,CAACC,IAAI,CACtB,CACEM,MAAO,GACPC,IAAK,kCAAoChB,EAAOY,GAAG,CAACK,IAAI,CAAC,IAC3D,EACA,CACEN,OAAQ,GACV,GAKJ,GAAIX,QAAAA,EAAOkB,MAAM,EAAclB,QAAAA,EAAOkB,MAAM,CAE1C,OADAC,QAAQC,GAAG,CAAC,oCAAqCpB,EAAOkB,MAAM,EACvDV,EAAAA,EAAYA,CAACC,IAAI,CACtB,CACEM,MAAO,GACPC,IAAK,kCAAoChB,EAAOkB,MAAM,EAExD,CACEP,OAAQ,GACV,GAIJ,IAAMU,EAAY,CAAC,EAAEpB,EAAS,CAAC,EAAED,EAAOkB,MAAM,CAAC,CAAC,EAAElB,EAAOY,GAAG,CAACK,IAAI,CAAC,KAAK,CAAC,CAElEV,EAASR,EAAIQ,MAAM,CACnBe,EAAoB,CAAC,MAAO,OAAO,CAACC,QAAQ,CAChDhB,GAAQiB,eAAiB,IAGrBC,EAA4B,CAChCC,QAAS,CACPC,cAAe5B,EAAI2B,OAAO,CAACpB,GAAG,CAAC,kBAAoB,EACrD,EACAI,KAAMY,EAAoB,KAAOvB,EAAIW,IAAI,CACzCH,OAAAA,EAEAqB,OAAQ,MACV,EAEAT,QAAQC,GAAG,CAAC,kBAAmBC,EAAWI,GAC1C,IAAMI,EAAc,MAAMC,MAAMT,EAAWI,GAO3C,OALAN,QAAQC,GAAG,CAAC,cAAeC,EAAW,CACpCV,OAAQkB,EAAYlB,MAAM,CAC1BoB,WAAYF,EAAYE,UAAU,GAG7BF,CACT,CAEO,IAAMG,EAAOlC,EACPmC,EAAMnC,EACNoC,EAAUpC,EAEVqC,EAAU,OCjEvBC,EAAA,IAAwBC,EAAAC,mBAAmB,EAC3CC,WAAA,CACAC,KAAcC,EAAAC,CAAS,CAAAC,SAAA,CACvBC,KAAA,uCACAC,SAAA,iCACAC,SAAA,QACAC,WAAA,yCACA,EACAC,iBAAA,2EACAC,iBAVA,aAWAC,SAAYC,CACZ,GAIA,CAAQC,oBAAAA,CAAA,CAAAC,6BAAAA,CAAA,CAAAC,YAAAA,CAAA,CAAAC,YAAAA,CAAA,CAAAC,wBAAAA,CAAA,EAAuGpB,EAC/GqB,EAAA,uCACA,SAAAC,IACA,MAAW,GAAAC,EAAAC,EAAA,EAAW,CACtBN,YAAAA,EACAD,6BAAAA,CACA,EACA,CC1BO,IAAAQ,EAAqBC,EAC5BC,EAAeC,EAAAC,CAAsB,CAAAC,IAAA,CAAM9B","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/api/upstash/[action]/[...key]/route.ts","webpack://_N_E/./app/api/upstash/[action]/[...key]/route.ts?cc1e","webpack://_N_E/?1403","webpack://_N_E/<anon>"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { NextRequest, NextResponse } from \"next/server\";\r\n\r\nasync function handle(\r\n  req: NextRequest,\r\n  { params }: { params: { action: string; key: string[] } },\r\n) {\r\n  const requestUrl = new URL(req.url);\r\n  const endpoint = requestUrl.searchParams.get(\"endpoint\");\r\n\r\n  if (req.method === \"OPTIONS\") {\r\n    return NextResponse.json({ body: \"OK\" }, { status: 200 });\r\n  }\r\n  const [...key] = params.key;\r\n  // only allow to request to *.upstash.io\r\n  if (!endpoint || !new URL(endpoint).hostname.endsWith(\".upstash.io\")) {\r\n    return NextResponse.json(\r\n      {\r\n        error: true,\r\n        msg: \"you are not allowed to request \" + params.key.join(\"/\"),\r\n      },\r\n      {\r\n        status: 403,\r\n      },\r\n    );\r\n  }\r\n\r\n  // only allow upstash get and set method\r\n  if (params.action !== \"get\" && params.action !== \"set\") {\r\n    console.log(\"[Upstash Route] forbidden action \", params.action);\r\n    return NextResponse.json(\r\n      {\r\n        error: true,\r\n        msg: \"you are not allowed to request \" + params.action,\r\n      },\r\n      {\r\n        status: 403,\r\n      },\r\n    );\r\n  }\r\n\r\n  const targetUrl = `${endpoint}/${params.action}/${params.key.join(\"/\")}`;\r\n\r\n  const method = req.method;\r\n  const shouldNotHaveBody = [\"get\", \"head\"].includes(\r\n    method?.toLowerCase() ?? \"\",\r\n  );\r\n\r\n  const fetchOptions: RequestInit = {\r\n    headers: {\r\n      authorization: req.headers.get(\"authorization\") ?? \"\",\r\n    },\r\n    body: shouldNotHaveBody ? null : req.body,\r\n    method,\r\n    // @ts-ignore\r\n    duplex: \"half\",\r\n  };\r\n\r\n  console.log(\"[Upstash Proxy]\", targetUrl, fetchOptions);\r\n  const fetchResult = await fetch(targetUrl, fetchOptions);\r\n\r\n  console.log(\"[Any Proxy]\", targetUrl, {\r\n    status: fetchResult.status,\r\n    statusText: fetchResult.statusText,\r\n  });\r\n\r\n  return fetchResult;\r\n}\r\n\r\nexport const POST = handle;\r\nexport const GET = handle;\r\nexport const OPTIONS = handle;\r\n\r\nexport const runtime = \"edge\";\r\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"D:\\\\z-toolkit\\\\NextChat\\\\app\\\\api\\\\upstash\\\\[action]\\\\[...key]\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/upstash/[action]/[...key]/route\",\n        pathname: \"/api/upstash/[action]/[...key]\",\n        filename: \"route\",\n        bundlePath: \"app/api/upstash/[action]/[...key]/route\"\n    },\n    resolvedPagePath: \"D:\\\\z-toolkit\\\\NextChat\\\\app\\\\api\\\\upstash\\\\[action]\\\\[...key]\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/upstash/[action]/[...key]/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fapi%2Fupstash%2F%5Baction%5D%2F%5B...key%5D%2Froute&page=%2Fapi%2Fupstash%2F%5Baction%5D%2F%5B...key%5D%2Froute&pagePath=private-next-app-dir%2Fapi%2Fupstash%2F%5Baction%5D%2F%5B...key%5D%2Froute.ts&appDir=D%3A%5Cz-toolkit%5CNextChat%5Capp&appPaths=%2Fapi%2Fupstash%2F%5Baction%5D%2F%5B...key%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/api/upstash/[action]/[...key]/route.ts?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["module","exports","require","handle","req","params","endpoint","requestUrl","URL","url","searchParams","get","method","NextResponse","json","body","status","key","hostname","endsWith","error","msg","join","action","console","log","targetUrl","shouldNotHaveBody","includes","toLowerCase","fetchOptions","headers","authorization","duplex","fetchResult","fetch","statusText","POST","GET","OPTIONS","runtime","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","headerHooks","staticGenerationBailout","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fapi_2Fupstash_2F_5Baction_5D_2F_5B_key_5D_2Froute_ts_page_2Fapi_2Fupstash_2F_5Baction_5D_2F_5B_key_5D_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGYXBpJTJGdXBzdGFzaCUyRiU1QmFjdGlvbiU1RCUyRiU1Qi4uLmtleSU1RCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGdXBzdGFzaCUyRiU1QmFjdGlvbiU1RCUyRiU1Qi4uLmtleSU1RCUyRnJvdXRlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGdXBzdGFzaCUyRiU1QmFjdGlvbiU1RCUyRiU1Qi4uLmtleSU1RCUyRnJvdXRlLnRzJmFwcERpcj1EJTNBJTVDei10b29sa2l0JTVDTmV4dENoYXQlNUNhcHAmYXBwUGF0aHM9JTJGYXBpJTJGdXBzdGFzaCUyRiU1QmFjdGlvbiU1RCUyRiU1Qi4uLmtleSU1RCUyRnJvdXRlJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PXN0YW5kYWxvbmUmcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCE_3D_nextConfigOutput_standalone_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap"],"sourceRoot":""}